event Approval(address indexed _arg0, address indexed _arg1, uint256 indexed _arg2);
event Transfer(address indexed _arg0, address indexed _arg1, uint256 indexed _arg2);
event OwnershipTransferred(address indexed _arg0, address indexed _arg1);
event ApprovalForAll(address indexed _arg0, address indexed _arg1, bool _arg2);
event a1e4fe82e2a65657cfd59fd66da1338be7d996f649643c161b7c24b1de80fca9;
mapping (unknown => unknown) mapping1;
mapping (unknown => unknown) mapping2;
mapping (uint256 => unknown) mapping3;
mapping (address => mapping (address => unknown)) mapping4;
mapping (uint256 => unknown) mapping5;
mapping (unknown => unknown) mapping6;

unknown var1; // Slot #0
unknown var2; // Slot #10
unknown public owner; // Slot #8da5cb5b
unknown public totalSupply; // Slot #18160ddd

require(msg.value == 0);
if (~(msg.data.length < 0x4)) {
    if (~(0x55f804b3 > msg.data >>> 0xe0)) {
        if (~(0x8da5cb5b > msg.data >>> 0xe0)) {
            if (~(0xb88d4fde > msg.data >>> 0xe0)) {
                if (msg.sig == b88d4fde) {
                    $b88d4fde();
                } else {
                    if (msg.sig == c87b56dd) {
                        $c87b56dd();
                    } else {
                        if (msg.sig == e985e9c5) {
                            $e985e9c5();
                        } else {
                            if (msg.sig == f2fde38b) {
                                $f2fde38b();
                            } else {
                                revert();
                            }
                        }
                    }
                }
            }
            if (msg.sig == 8da5cb5b) {
                $8da5cb5b();
            } else {
                if (msg.sig == 95d89b41) {
                    $95d89b41();
                } else {
                    if (msg.sig == a22cb465) {
                        $a22cb465();
                    } else {
                        revert();
                    }
                }
            }
        }
        if (~(0x70a08231 > msg.data >>> 0xe0)) {
            if (msg.sig == 70a08231) {
                $70a08231();
            } else {
                if (msg.sig == 715018a6) {
                    $715018a6();
                } else {
                    if (msg.sig == 7869f32c) {
                        $7869f32c();
                    } else {
                        if (msg.sig == 8cb5b56b) {
                            $8cb5b56b();
                        } else {
                            revert();
                        }
                    }
                }
            }
        }
        if (msg.sig == 55f804b3) {
            $55f804b3();
        } else {
            if (msg.sig == 6352211e) {
                $6352211e();
            } else {
                if (msg.sig == 6c0360eb) {
                    $6c0360eb();
                } else {
                    revert();
                }
            }
        }
    }
    if (~(0x198e2b8a > msg.data >>> 0xe0)) {
        if (~(0x42842e0e > msg.data >>> 0xe0)) {
            if (msg.sig == 42842e0e) {
                $42842e0e();
            } else {
                if (msg.sig == 4f64f049) {
                    $4f64f049();
                } else {
                    if (msg.sig == 4f6ccce7) {
                        $4f6ccce7();
                    } else {
                        if (msg.sig == 53ed8765) {
                            $53ed8765();
                        } else {
                            revert();
                        }
                    }
                }
            }
        }
        if (msg.sig == 198e2b8a) {
            $198e2b8a();
        } else {
            if (msg.sig == 23b872dd) {
                $23b872dd();
            } else {
                if (msg.sig == 2f745c59) {
                    $2f745c59();
                } else {
                    revert();
                }
            }
        }
    }
    if (msg.sig == 01ffc9a7) {
        $01ffc9a7();
    } else {
        if (msg.sig == 06fdde03) {
            $06fdde03();
        } else {
            if (msg.sig == 081812fc) {
                $081812fc();
            } else {
                if (msg.sig == 095ea7b3) {
                    $095ea7b3();
                } else {
                    if (msg.sig == 16606e4b) {
                        $16606e4b();
                    } else {
                        if (msg.sig == 18160ddd) {
                            $18160ddd();
                        } else {
                            revert();
                        }
                    }
                }
            }
        }
    }
}
revert();
function safeTransferFrom(address _arg0, address _arg1, uint256 _arg2, bytes _arg3) public {
    require(msg.data.length - 0x4 >= 0x80);
    require(_arg3 <= 0x100000000);
    require(0x4 + _arg3 + 0x20 <= 0x4 + msg.data.length - 0x4);
    require((msg.data[0x4 + _arg3] > 0x100000000 | 0x20 + 0x4 + _arg3 + msg.data[0x4 + _arg3] * 0x1 > 0x4 + msg.data.length - 0x4) == 0);
    memory[0xa0 + msg.data[0x4 + _arg3]] = 0x0;
    if (~(mapping5[_arg2 << 0x0] != 0x0)) {
        memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x8c379a000000000000000000000000000000000000000000000000000000000;
        memory[0x4 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x20 + 0x4 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x4 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20;
        memory[0x20 + 0x4 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x2c;
        revert(memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20:(0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20+0x40 + 0x20 + 0x20 + 0x4 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20)]);
    }
    memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x29;
    if (~(mapping5[_arg2 << 0x0] != 0x0)) {
        memory[0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x8c379a000000000000000000000000000000000000000000000000000000000;
        memory[0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20;
        memory[0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20];
        if (~(0x0 < memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] == 0)) {
            memory[0x20 + 0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20];
            if (~(0x0 + 0x20 < memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] == 0)) {
                memory[0x20 + 0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x20] = memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x20];
                if (~(0x0 + 0x20 + 0x20 < memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] == 0)) {
                    memory[0x20 + 0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x40] = memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x40];
                    if (~(0x0 + 0x20 + 0x20 + 0x20 < memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] == 0)) {
                        memory[0x20 + 0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x60] = memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x60];
                        if (~(0x0 + 0x20 + 0x20 + 0x20 + 0x20 < memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] == 0)) {
                            memory[0x20 + 0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x80] = memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x80];
                            if (~(0x0 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 < memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] == 0)) {
                                memory[0x20 + 0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0xa0] = memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0xa0];
                                if (~(0x0 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 < memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] == 0)) {
                                    memory[0x20 + 0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0xc0] = memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0xc0];
                                    if (~(0x0 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 < memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] == 0)) {
                                        memory[0x20 + 0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0xe0] = memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0xe0];
                                        if (~(0x0 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 < memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] == 0)) {
                                            memory[0x20 + 0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x100] = memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x100];
                                            if (~(0x0 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 < memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] == 0)) {
                                                memory[0x20 + 0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x120] = memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x120];
                                                if (~(0x0 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 < memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] == 0)) {
                                                    memory[0x20 + 0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x140] = memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x140];
                                                }
                                                if (~((0x1f & memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20]) == 0)) {
                                                    memory[memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] + 0x20 + 0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20])] = ~(0x100 ** (0x20 - (0x1f & memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20])) - 0x1) & memory[memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] + 0x20 + 0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20])];
                                                    revert(memory[0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20:(0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20+0x20 + memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] + 0x20 + 0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20]) - 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20)]);
                                                }
                                                revert(memory[0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20:(0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20+memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] + 0x20 + 0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20)]);
                                            }
                                            if (~((0x1f & memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20]) == 0)) {
                                                memory[memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] + 0x20 + 0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20])] = ~(0x100 ** (0x20 - (0x1f & memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20])) - 0x1) & memory[memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] + 0x20 + 0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20])];
                                                revert(memory[0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20:(0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20+0x20 + memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] + 0x20 + 0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20]) - 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20)]);
                                            }
                                            revert(memory[0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20:(0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20+memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] + 0x20 + 0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20)]);
                                        }
                                        if (~((0x1f & memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20]) == 0)) {
                                            memory[memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] + 0x20 + 0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20])] = ~(0x100 ** (0x20 - (0x1f & memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20])) - 0x1) & memory[memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] + 0x20 + 0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20])];
                                            revert(memory[0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20:(0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20+0x20 + memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] + 0x20 + 0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20]) - 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20)]);
                                        }
                                        revert(memory[0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20:(0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20+memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] + 0x20 + 0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20)]);
                                    }
                                    if (~((0x1f & memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20]) == 0)) {
                                        memory[memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] + 0x20 + 0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20])] = ~(0x100 ** (0x20 - (0x1f & memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20])) - 0x1) & memory[memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] + 0x20 + 0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20])];
                                        revert(memory[0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20:(0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20+0x20 + memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] + 0x20 + 0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20]) - 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20)]);
                                    }
                                    revert(memory[0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20:(0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20+memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] + 0x20 + 0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20)]);
                                }
                                if (~((0x1f & memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20]) == 0)) {
                                    memory[memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] + 0x20 + 0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20])] = ~(0x100 ** (0x20 - (0x1f & memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20])) - 0x1) & memory[memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] + 0x20 + 0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20])];
                                    revert(memory[0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20:(0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20+0x20 + memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] + 0x20 + 0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20]) - 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20)]);
                                }
                                revert(memory[0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20:(0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20+memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] + 0x20 + 0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20)]);
                            }
                            if (~((0x1f & memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20]) == 0)) {
                                memory[memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] + 0x20 + 0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20])] = ~(0x100 ** (0x20 - (0x1f & memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20])) - 0x1) & memory[memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] + 0x20 + 0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20])];
                                revert(memory[0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20:(0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20+0x20 + memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] + 0x20 + 0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20]) - 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20)]);
                            }
                        }
                        if (~((0x1f & memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20]) == 0)) {
                            memory[memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] + 0x20 + 0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20])] = ~(0x100 ** (0x20 - (0x1f & memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20])) - 0x1) & memory[memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] + 0x20 + 0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20])];
                        }
                    }
                    if (~((0x1f & memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20]) == 0)) {
                        memory[memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] + 0x20 + 0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20])] = ~(0x100 ** (0x20 - (0x1f & memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20])) - 0x1) & memory[memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] + 0x20 + 0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20])];
                    }
                }
                if (~((0x1f & memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20]) == 0)) {
                    memory[memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] + 0x20 + 0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20])] = ~(0x100 ** (0x20 - (0x1f & memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20])) - 0x1) & memory[memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] + 0x20 + 0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20])];
                }
            }
            if (~((0x1f & memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20]) == 0)) {
                memory[memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] + 0x20 + 0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20])] = ~(0x100 ** (0x20 - (0x1f & memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20])) - 0x1) & memory[memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] + 0x20 + 0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20])];
            }
        }
        if (~((0x1f & memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20]) == 0)) {
            memory[memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] + 0x20 + 0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20])] = ~(0x100 ** (0x20 - (0x1f & memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20])) - 0x1) & memory[memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] + 0x20 + 0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20])];
        }
    }
    if (~(mapping5[_arg2 << 0x0] - 0x1 < storage[0x0 + 0x0 + 0x3])) {
        revert('Invalid instruction (0xfe)');
    }
    if (~((0xffffffffffffffffffffffffffffffffffffffff & msg.sender) == (0xffffffffffffffffffffffffffffffffffffffff & storage[0x1 + 0x2 * (mapping5[_arg2 << 0x0] - 0x1) + keccak256(0x3)] >>> 0x0))) {
        if (~(mapping5[_arg2 << 0x0] != 0x0)) {
            memory[0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x8c379a000000000000000000000000000000000000000000000000000000000;
            memory[0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20;
            memory[0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x2c;
            revert(memory[0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20:(0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20+0x40 + 0x20 + 0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20)]);
        }
        if (~((0xffffffffffffffffffffffffffffffffffffffff & 0xffffffffffffffffffffffffffffffffffffffff & mapping6[_arg2] / 0x100 ** 0x0) == (0xffffffffffffffffffffffffffffffffffffffff & msg.sender))) {
            if (~(0xff & mapping7[msg.sender] / 0x100 ** 0x0)) {
                memory[0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x8c379a000000000000000000000000000000000000000000000000000000000;
                memory[0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20;
                memory[0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x31;
                revert(memory[0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20:(0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20+0x40 + 0x20 + 0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20)]);
            }
            memory[0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x29;
            if (~(mapping5[_arg2 << 0x0] != 0x0)) {
                memory[0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x8c379a000000000000000000000000000000000000000000000000000000000;
                memory[0x4 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x20 + 0x4 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x4 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20;
                memory[0x20 + 0x4 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = memory[0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20];
            }
            if (~(mapping5[_arg2 << 0x0] - 0x1 < storage[0x0 + 0x0 + 0x3])) {
                revert('Invalid instruction (0xfe)');
            }
            if (~((0xffffffffffffffffffffffffffffffffffffffff & storage[0x1 + 0x2 * (mapping5[_arg2 << 0x0] - 0x1) + keccak256(0x3)] >>> 0x0) == (0xffffffffffffffffffffffffffffffffffffffff & 0xffffffffffffffffffffffffffffffffffffffff & _arg0))) {
                memory[0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x8c379a000000000000000000000000000000000000000000000000000000000;
                memory[0x4 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x20 + 0x4 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x4 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20;
                memory[0x20 + 0x4 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x29;
                revert(memory[0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20:(0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20+0x40 + 0x20 + 0x20 + 0x4 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20)]);
            }
            if (~((0xffffffffffffffffffffffffffffffffffffffff & 0xffffffffffffffffffffffffffffffffffffffff & _arg1) != (0xffffffffffffffffffffffffffffffffffffffff & 0x0))) {
                memory[0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x8c379a000000000000000000000000000000000000000000000000000000000;
                memory[0x4 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x20 + 0x4 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x4 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20;
                memory[0x20 + 0x4 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x24;
                revert(memory[0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20:(0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20+0x40 + 0x20 + 0x20 + 0x4 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20)]);
            }
            mapping6[_arg2] = (0xffffffffffffffffffffffffffffffffffffffff & 0x0) * 0x100 ** 0x0 | ~(0xffffffffffffffffffffffffffffffffffffffff * 0x100 ** 0x0) & mapping6[_arg2];
            memory[0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x29;
            if (~(mapping5[_arg2 << 0x0] != 0x0)) {
                memory[0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x8c379a000000000000000000000000000000000000000000000000000000000;
                memory[0x4 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x20 + 0x4 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x4 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20;
                memory[0x20 + 0x4 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = memory[0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20];
            }
            if (~(mapping5[_arg2 << 0x0] - 0x1 < storage[0x0 + 0x0 + 0x3])) {
                revert('Invalid instruction (0xfe)');
            }
            emit Approval(storage[0x1 + 0x2 * (mapping5[_arg2 << 0x0] - 0x1) + keccak256(0x3)] >>> 0x0, 0x0, _arg2);
            if (~(storage[keccak256(_arg2 << 0x0, 0x1 + keccak256(_arg0, 0x2))] == 0x0)) {
                if (~(storage[0x0 + 0x0 + keccak256(_arg0, 0x2)] - 0x1 < storage[0x0 + 0x0 + keccak256(_arg0, 0x2)])) {
                    revert('Invalid instruction (0xfe)');
                }
                if (~(storage[keccak256(_arg2 << 0x0, 0x1 + keccak256(_arg0, 0x2))] - 0x1 < storage[0x0 + 0x0 + keccak256(_arg0, 0x2)])) {
                    revert('Invalid instruction (0xfe)');
                }
                storage[keccak256(keccak256(_arg0, 0x2)) + storage[keccak256(_arg2 << 0x0, 0x1 + keccak256(_arg0, 0x2))] - 0x1] = storage[keccak256(keccak256(_arg0, 0x2)) + storage[keccak256(_arg0, 0x2)] - 0x1];
                storage[keccak256(storage[keccak256(keccak256(_arg0, 0x2)) + storage[keccak256(_arg0, 0x2)] - 0x1], 0x1 + keccak256(_arg0, 0x2))] = storage[keccak256(_arg2 << 0x0, 0x1 + keccak256(_arg0, 0x2))] - 0x1 + 0x1;
                if (~storage[0x0 + 0x0 + keccak256(_arg0, 0x2)]) {
                    revert('Invalid instruction (0xfe)');
                }
                storage[keccak256(keccak256(_arg0, 0x2)) + storage[keccak256(_arg0, 0x2)] - 0x1] = 0x0;
                storage[keccak256(_arg0, 0x2)] -= 0x1;
                storage[keccak256(_arg2 << 0x0, 0x1 + keccak256(_arg0, 0x2))] = 0x0;
                if (~(storage[keccak256(_arg2 << 0x0, 0x1 + keccak256(_arg1, 0x2))] != 0x0)) {
                    storage[keccak256(_arg1, 0x2)] += 0x1;
                    storage[keccak256(keccak256(_arg1, 0x2)) + storage[keccak256(_arg1, 0x2)] + 0x1 - 0x1] = _arg2 << 0x0;
                    storage[keccak256(_arg2 << 0x0, 0x1 + keccak256(_arg1, 0x2))] = storage[keccak256(_arg1, 0x2)];
                    if (~(mapping5[_arg2 << 0x0] != 0x0)) {
                        memory[0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = _arg2 << 0x0;
                        memory[0x20 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = _arg1 << 0x0;
                        storage[0x3] += 0x1;
                        storage[0x2 * (storage[0x3] + 0x1 - 0x1) + keccak256(0x3)] = memory[0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20];
                        storage[0x1 + 0x2 * (storage[0x3] + 0x1 - 0x1) + keccak256(0x3)] = memory[0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x20];
                        mapping5[_arg2 << 0x0] = storage[0x0 + 0x0 + 0x3];
                        emit Transfer(_arg0, _arg1, _arg2);
                        if (~(keccak256(address((0xffffffffffffffffffffffffffffffffffffffff & 0xffffffffffffffffffffffffffffffffffffffff & _arg1)).code) != 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 << 0x0 == 0)) {
                            if (~(keccak256(address((0xffffffffffffffffffffffffffffffffffffffff & 0xffffffffffffffffffffffffffffffffffffffff & _arg1)).code) != 0x0 << 0x0)) {
                                return;
                            }
                            memory[0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = msg.sender;
                            memory[0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = _arg0;
                            memory[0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = _arg2;
                            memory[0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20;
                            memory[0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = msg.data[0x4 + _arg3];
                            if (~(0x0 < msg.data[0x4 + _arg3] == 0)) {
                                memory[0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = memory[0xa0];
                                if (~(0x0 + 0x20 < msg.data[0x4 + _arg3] == 0)) {
                                    memory[0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x20] = memory[0xc0];
                                    if (~(0x0 + 0x20 + 0x20 < msg.data[0x4 + _arg3] == 0)) {
                                        memory[0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x40] = memory[0xe0];
                                        if (~(0x0 + 0x20 + 0x20 + 0x20 < msg.data[0x4 + _arg3] == 0)) {
                                            memory[0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x60] = memory[0x100];
                                            if (~(0x0 + 0x20 + 0x20 + 0x20 + 0x20 < msg.data[0x4 + _arg3] == 0)) {
                                                memory[0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x80] = memory[0x120];
                                                if (~(0x0 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 < msg.data[0x4 + _arg3] == 0)) {
                                                    memory[0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0xa0] = memory[0x140];
                                                    if (~(0x0 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 < msg.data[0x4 + _arg3] == 0)) {
                                                        memory[0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0xc0] = memory[0x160];
                                                        if (~(0x0 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 < msg.data[0x4 + _arg3] == 0)) {
                                                            memory[0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0xe0] = memory[0x180];
                                                            if (~(0x0 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 < msg.data[0x4 + _arg3] == 0)) {
                                                                memory[0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x100] = memory[0x1a0];
                                                                if (~(0x0 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 < msg.data[0x4 + _arg3] == 0)) {
                                                                    memory[0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x120] = memory[0x1c0];
                                                                    if (~(0x0 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 < msg.data[0x4 + _arg3] == 0)) {
                                                                        memory[0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x140] = memory[0x1e0];
                                                                    }
                                                                    if (~((0x1f & msg.data[0x4 + _arg3]) == 0)) {
                                                                        memory[msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])] = ~(0x100 ** (0x20 - (0x1f & msg.data[0x4 + _arg3])) - 0x1) & memory[msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])];
                                                                        memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]) - 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x20;
                                                                        memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x20] = memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x20] | 0x150b7a0200000000000000000000000000000000000000000000000000000000;
                                                                        memory[0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])] = 0x32;
                                                                        if (~(keccak256(address((0xffffffffffffffffffffffffffffffffffffffff & 0xffffffffffffffffffffffffffffffffffffffff & _arg1)).code) != 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 << 0x0 == 0)) {
                                                                            if (~(keccak256(address((0xffffffffffffffffffffffffffffffffffffffff & 0xffffffffffffffffffffffffffffffffffffffff & _arg1)).code) != 0x0 << 0x0)) {
                                                                                memory[0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])] = 0x8c379a000000000000000000000000000000000000000000000000000000000;
                                                                                memory[0x4 + 0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])] = 0x20 + 0x4 + 0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]) - 0x4 + 0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]);
                                                                                memory[0x20 + 0x4 + 0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])] = 0x1d;
                                                                                memory[0x20 + 0x20 + 0x4 + 0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])] = 0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000;
                                                                                revert(memory[0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]):(0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])+0x20 + 0x20 + 0x20 + 0x4 + 0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]) - 0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]))]);
                                                                            }
                                                                            if (~(memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] < 0x20)) {
                                                                                memory[0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])] = memory[0x20 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20];
                                                                                if (~(memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] - 0x20 < 0x20)) {
                                                                                    memory[0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]) + 0x20] = memory[0x20 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x20];
                                                                                    if (~(memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] - 0x20 - 0x20 < 0x20)) {
                                                                                        memory[0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]) + 0x20 + 0x20] = memory[0x20 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x20 + 0x20];
                                                                                        if (~(memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] - 0x20 - 0x20 - 0x20 < 0x20)) {
                                                                                            memory[0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]) + 0x20 + 0x20 + 0x20] = memory[0x20 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20];
                                                                                            if (~(memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] - 0x20 - 0x20 - 0x20 - 0x20 < 0x20)) {
                                                                                                memory[0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]) + 0x20 + 0x20 + 0x20 + 0x20] = memory[0x20 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20];
                                                                                                if (~(memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 < 0x20)) {
                                                                                                    memory[0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]) + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] = memory[0x20 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20];
                                                                                                    if (~(memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 < 0x20)) {
                                                                                                        memory[0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]) + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] = memory[0x20 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20];
                                                                                                        if (~(memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 < 0x20)) {
                                                                                                            memory[0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]) + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] = memory[0x20 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20];
                                                                                                            if (~(memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 < 0x20)) {
                                                                                                                memory[0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]) + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] = memory[0x20 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20];
                                                                                                                if (~(memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 < 0x20)) {
                                                                                                                    memory[0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]) + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] = memory[0x20 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20];
                                                                                                                    if (~(memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 < 0x20)) {
                                                                                                                        memory[0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]) + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] = memory[0x20 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20];
                                                                                                                    }
                                                                                                                    memory[0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]) + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] = memory[0x20 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] & ~(0x100 ** (0x20 - memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20) - 0x1) | memory[0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]) + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] & 0x100 ** (0x20 - memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20) - 0x1;
                                                                                                                    throw('WARN:CALL output start should be number');
                                                                                                                }
                                                                                                                memory[0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]) + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] = memory[0x20 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] & ~(0x100 ** (0x20 - memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20) - 0x1) | memory[0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]) + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] & 0x100 ** (0x20 - memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20) - 0x1;
                                                                                                                throw('WARN:CALL output start should be number');
                                                                                                            }
                                                                                                            memory[0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]) + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] = memory[0x20 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] & ~(0x100 ** (0x20 - memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20) - 0x1) | memory[0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]) + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] & 0x100 ** (0x20 - memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20) - 0x1;
                                                                                                            throw('WARN:CALL output start should be number');
                                                                                                        }
                                                                                                        memory[0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]) + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] = memory[0x20 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] & ~(0x100 ** (0x20 - memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20) - 0x1) | memory[0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]) + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] & 0x100 ** (0x20 - memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20) - 0x1;
                                                                                                        throw('WARN:CALL output start should be number');
                                                                                                    }
                                                                                                    memory[0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]) + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] = memory[0x20 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] & ~(0x100 ** (0x20 - memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20) - 0x1) | memory[0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]) + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] & 0x100 ** (0x20 - memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20) - 0x1;
                                                                                                    throw('WARN:CALL output start should be number');
                                                                                                }
                                                                                                memory[0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]) + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] = memory[0x20 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] & ~(0x100 ** (0x20 - memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] - 0x20 - 0x20 - 0x20 - 0x20 - 0x20) - 0x1) | memory[0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]) + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] & 0x100 ** (0x20 - memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] - 0x20 - 0x20 - 0x20 - 0x20 - 0x20) - 0x1;
                                                                                                throw('WARN:CALL output start should be number');
                                                                                            }
                                                                                            memory[0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]) + 0x20 + 0x20 + 0x20 + 0x20] = memory[0x20 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20] & ~(0x100 ** (0x20 - memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] - 0x20 - 0x20 - 0x20 - 0x20) - 0x1) | memory[0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]) + 0x20 + 0x20 + 0x20 + 0x20] & 0x100 ** (0x20 - memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] - 0x20 - 0x20 - 0x20 - 0x20) - 0x1;
                                                                                            throw('WARN:CALL output start should be number');
                                                                                        }
                                                                                        memory[0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]) + 0x20 + 0x20 + 0x20] = memory[0x20 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20] & ~(0x100 ** (0x20 - memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] - 0x20 - 0x20 - 0x20) - 0x1) | memory[0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]) + 0x20 + 0x20 + 0x20] & 0x100 ** (0x20 - memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] - 0x20 - 0x20 - 0x20) - 0x1;
                                                                                        throw('WARN:CALL output start should be number');
                                                                                    }
                                                                                    memory[0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]) + 0x20 + 0x20] = memory[0x20 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x20 + 0x20] & ~(0x100 ** (0x20 - memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] - 0x20 - 0x20) - 0x1) | memory[0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]) + 0x20 + 0x20] & 0x100 ** (0x20 - memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] - 0x20 - 0x20) - 0x1;
                                                                                    throw('WARN:CALL output start should be number');
                                                                                }
                                                                                memory[0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]) + 0x20] = memory[0x20 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x20] & ~(0x100 ** (0x20 - memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] - 0x20) - 0x1) | memory[0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]) + 0x20] & 0x100 ** (0x20 - memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] - 0x20) - 0x1;
                                                                                throw('WARN:CALL output start should be number');
                                                                            }
                                                                            memory[0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])] = memory[0x20 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] & ~(0x100 ** (0x20 - memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20]) - 0x1) | memory[0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])] & 0x100 ** (0x20 - memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20]) - 0x1;
                                                                            throw('WARN:CALL output start should be number');
                                                                        }
                                                                        if (~(keccak256(address((0xffffffffffffffffffffffffffffffffffffffff & 0xffffffffffffffffffffffffffffffffffffffff & _arg1)).code) != 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 << 0x0)) {
                                                                            memory[0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])] = 0x8c379a000000000000000000000000000000000000000000000000000000000;
                                                                            memory[0x4 + 0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])] = 0x20 + 0x4 + 0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]) - 0x4 + 0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]);
                                                                            memory[0x20 + 0x4 + 0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])] = 0x1d;
                                                                            memory[0x20 + 0x20 + 0x4 + 0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])] = 0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000;
                                                                            revert(memory[0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]):(0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])+0x20 + 0x20 + 0x20 + 0x4 + 0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]) - 0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]))]);
                                                                        }
                                                                    }
                                                                    memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x20;
                                                                    memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x20] = memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x20] | 0x150b7a0200000000000000000000000000000000000000000000000000000000;
                                                                    memory[msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x32;
                                                                    if (~(keccak256(address((0xffffffffffffffffffffffffffffffffffffffff & 0xffffffffffffffffffffffffffffffffffffffff & _arg1)).code) != 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 << 0x0 == 0)) {
                                                                        if (~(keccak256(address((0xffffffffffffffffffffffffffffffffffffffff & 0xffffffffffffffffffffffffffffffffffffffff & _arg1)).code) != 0x0 << 0x0)) {
                                                                            memory[0x60 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x8c379a000000000000000000000000000000000000000000000000000000000;
                                                                            memory[0x4 + 0x60 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x20 + 0x4 + 0x60 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x4 + 0x60 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20;
                                                                            memory[0x20 + 0x4 + 0x60 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x1d;
                                                                            memory[0x20 + 0x20 + 0x4 + 0x60 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000;
                                                                            revert(memory[0x60 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20:(0x60 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20+0x20 + 0x20 + 0x20 + 0x4 + 0x60 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x60 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20)]);
                                                                        }
                                                                    }
                                                                    if (~(keccak256(address((0xffffffffffffffffffffffffffffffffffffffff & 0xffffffffffffffffffffffffffffffffffffffff & _arg1)).code) != 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 << 0x0)) {
                                                                        memory[0x60 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x8c379a000000000000000000000000000000000000000000000000000000000;
                                                                        memory[0x4 + 0x60 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x20 + 0x4 + 0x60 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x4 + 0x60 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20;
                                                                        memory[0x20 + 0x4 + 0x60 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x1d;
                                                                        memory[0x20 + 0x20 + 0x4 + 0x60 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000;
                                                                        revert(memory[0x60 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20:(0x60 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20+0x20 + 0x20 + 0x20 + 0x4 + 0x60 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x60 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20)]);
                                                                    }
                                                                }
                                                                if (~((0x1f & msg.data[0x4 + _arg3]) == 0)) {
                                                                    memory[msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])] = ~(0x100 ** (0x20 - (0x1f & msg.data[0x4 + _arg3])) - 0x1) & memory[msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])];
                                                                    memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]) - 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x20;
                                                                    memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x20] = memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x20] | 0x150b7a0200000000000000000000000000000000000000000000000000000000;
                                                                    memory[0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])] = 0x32;
                                                                    if (~(keccak256(address((0xffffffffffffffffffffffffffffffffffffffff & 0xffffffffffffffffffffffffffffffffffffffff & _arg1)).code) != 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 << 0x0 == 0)) {
                                                                        if (~(keccak256(address((0xffffffffffffffffffffffffffffffffffffffff & 0xffffffffffffffffffffffffffffffffffffffff & _arg1)).code) != 0x0 << 0x0)) {
                                                                            memory[0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])] = 0x8c379a000000000000000000000000000000000000000000000000000000000;
                                                                            memory[0x4 + 0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])] = 0x20 + 0x4 + 0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]) - 0x4 + 0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]);
                                                                            memory[0x20 + 0x4 + 0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])] = 0x1d;
                                                                            memory[0x20 + 0x20 + 0x4 + 0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])] = 0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000;
                                                                            revert(memory[0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]):(0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])+0x20 + 0x20 + 0x20 + 0x4 + 0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]) - 0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]))]);
                                                                        }
                                                                    }
                                                                    if (~(keccak256(address((0xffffffffffffffffffffffffffffffffffffffff & 0xffffffffffffffffffffffffffffffffffffffff & _arg1)).code) != 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 << 0x0)) {
                                                                        memory[0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])] = 0x8c379a000000000000000000000000000000000000000000000000000000000;
                                                                        memory[0x4 + 0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])] = 0x20 + 0x4 + 0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]) - 0x4 + 0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]);
                                                                        memory[0x20 + 0x4 + 0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])] = 0x1d;
                                                                        memory[0x20 + 0x20 + 0x4 + 0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])] = 0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000;
                                                                        revert(memory[0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]):(0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])+0x20 + 0x20 + 0x20 + 0x4 + 0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]) - 0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]))]);
                                                                    }
                                                                }
                                                                memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x20;
                                                                memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x20] = memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x20] | 0x150b7a0200000000000000000000000000000000000000000000000000000000;
                                                                memory[msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x32;
                                                                if (~(keccak256(address((0xffffffffffffffffffffffffffffffffffffffff & 0xffffffffffffffffffffffffffffffffffffffff & _arg1)).code) != 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 << 0x0 == 0)) {
                                                                    if (~(keccak256(address((0xffffffffffffffffffffffffffffffffffffffff & 0xffffffffffffffffffffffffffffffffffffffff & _arg1)).code) != 0x0 << 0x0)) {
                                                                        memory[0x60 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x8c379a000000000000000000000000000000000000000000000000000000000;
                                                                        memory[0x4 + 0x60 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x20 + 0x4 + 0x60 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x4 + 0x60 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20;
                                                                        memory[0x20 + 0x4 + 0x60 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x1d;
                                                                        memory[0x20 + 0x20 + 0x4 + 0x60 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000;
                                                                        revert(memory[0x60 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20:(0x60 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20+0x20 + 0x20 + 0x20 + 0x4 + 0x60 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x60 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20)]);
                                                                    }
                                                                }
                                                                if (~(keccak256(address((0xffffffffffffffffffffffffffffffffffffffff & 0xffffffffffffffffffffffffffffffffffffffff & _arg1)).code) != 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 << 0x0)) {
                                                                    memory[0x60 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x8c379a000000000000000000000000000000000000000000000000000000000;
                                                                    memory[0x4 + 0x60 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x20 + 0x4 + 0x60 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x4 + 0x60 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20;
                                                                    memory[0x20 + 0x4 + 0x60 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x1d;
                                                                    memory[0x20 + 0x20 + 0x4 + 0x60 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000;
                                                                    revert(memory[0x60 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20:(0x60 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20+0x20 + 0x20 + 0x20 + 0x4 + 0x60 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x60 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20)]);
                                                                }
                                                            }
                                                            if (~((0x1f & msg.data[0x4 + _arg3]) == 0)) {
                                                                memory[msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])] = ~(0x100 ** (0x20 - (0x1f & msg.data[0x4 + _arg3])) - 0x1) & memory[msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])];
                                                                memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]) - 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x20;
                                                                memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x20] = memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x20] | 0x150b7a0200000000000000000000000000000000000000000000000000000000;
                                                                memory[0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])] = 0x32;
                                                                if (~(keccak256(address((0xffffffffffffffffffffffffffffffffffffffff & 0xffffffffffffffffffffffffffffffffffffffff & _arg1)).code) != 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 << 0x0 == 0)) {
                                                                    if (~(keccak256(address((0xffffffffffffffffffffffffffffffffffffffff & 0xffffffffffffffffffffffffffffffffffffffff & _arg1)).code) != 0x0 << 0x0)) {
                                                                        memory[0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])] = 0x8c379a000000000000000000000000000000000000000000000000000000000;
                                                                        memory[0x4 + 0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])] = 0x20 + 0x4 + 0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]) - 0x4 + 0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]);
                                                                        memory[0x20 + 0x4 + 0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])] = 0x1d;
                                                                        memory[0x20 + 0x20 + 0x4 + 0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])] = 0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000;
                                                                        revert(memory[0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]):(0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])+0x20 + 0x20 + 0x20 + 0x4 + 0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]) - 0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]))]);
                                                                    }
                                                                }
                                                                if (~(keccak256(address((0xffffffffffffffffffffffffffffffffffffffff & 0xffffffffffffffffffffffffffffffffffffffff & _arg1)).code) != 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 << 0x0)) {
                                                                    memory[0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])] = 0x8c379a000000000000000000000000000000000000000000000000000000000;
                                                                    memory[0x4 + 0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])] = 0x20 + 0x4 + 0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]) - 0x4 + 0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]);
                                                                    memory[0x20 + 0x4 + 0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])] = 0x1d;
                                                                    memory[0x20 + 0x20 + 0x4 + 0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])] = 0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000;
                                                                    revert(memory[0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]):(0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])+0x20 + 0x20 + 0x20 + 0x4 + 0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]) - 0x60 + 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]))]);
                                                                }
                                                            }
                                                            memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x20;
                                                            memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x20] = memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x20] | 0x150b7a0200000000000000000000000000000000000000000000000000000000;
                                                            memory[msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x32;
                                                            if (~(keccak256(address((0xffffffffffffffffffffffffffffffffffffffff & 0xffffffffffffffffffffffffffffffffffffffff & _arg1)).code) != 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 << 0x0 == 0)) {
                                                            }
                                                        }
                                                        if (~((0x1f & msg.data[0x4 + _arg3]) == 0)) {
                                                            memory[msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])] = ~(0x100 ** (0x20 - (0x1f & msg.data[0x4 + _arg3])) - 0x1) & memory[msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])];
                                                            memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]) - 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x20;
                                                            memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x20] = memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x20] | 0x150b7a0200000000000000000000000000000000000000000000000000000000;
                                                            memory[0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])] = 0x32;
                                                            if (~(keccak256(address((0xffffffffffffffffffffffffffffffffffffffff & 0xffffffffffffffffffffffffffffffffffffffff & _arg1)).code) != 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 << 0x0 == 0)) {
                                                            }
                                                        }
                                                        memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x20;
                                                        memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x20] = memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x20] | 0x150b7a0200000000000000000000000000000000000000000000000000000000;
                                                        memory[msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x32;
                                                        if (~(keccak256(address((0xffffffffffffffffffffffffffffffffffffffff & 0xffffffffffffffffffffffffffffffffffffffff & _arg1)).code) != 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 << 0x0 == 0)) {
                                                        }
                                                    }
                                                    if (~((0x1f & msg.data[0x4 + _arg3]) == 0)) {
                                                        memory[msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])] = ~(0x100 ** (0x20 - (0x1f & msg.data[0x4 + _arg3])) - 0x1) & memory[msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])];
                                                        memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]) - 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x20;
                                                        memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x20] = memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x20] | 0x150b7a0200000000000000000000000000000000000000000000000000000000;
                                                        memory[0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])] = 0x32;
                                                        if (~(keccak256(address((0xffffffffffffffffffffffffffffffffffffffff & 0xffffffffffffffffffffffffffffffffffffffff & _arg1)).code) != 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 << 0x0 == 0)) {
                                                        }
                                                    }
                                                    memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x20;
                                                    memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x20] = memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x20] | 0x150b7a0200000000000000000000000000000000000000000000000000000000;
                                                    memory[msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x32;
                                                    if (~(keccak256(address((0xffffffffffffffffffffffffffffffffffffffff & 0xffffffffffffffffffffffffffffffffffffffff & _arg1)).code) != 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 << 0x0 == 0)) {
                                                    }
                                                }
                                                if (~((0x1f & msg.data[0x4 + _arg3]) == 0)) {
                                                    memory[msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])] = ~(0x100 ** (0x20 - (0x1f & msg.data[0x4 + _arg3])) - 0x1) & memory[msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])];
                                                    memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3]) - 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x20;
                                                    memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x20] = memory[0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x20] | 0x150b7a0200000000000000000000000000000000000000000000000000000000;
                                                    memory[0x20 + msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])] = 0x32;
                                                }
                                            }
                                            if (~((0x1f & msg.data[0x4 + _arg3]) == 0)) {
                                                memory[msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])] = ~(0x100 ** (0x20 - (0x1f & msg.data[0x4 + _arg3])) - 0x1) & memory[msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])];
                                            }
                                        }
                                        if (~((0x1f & msg.data[0x4 + _arg3]) == 0)) {
                                            memory[msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])] = ~(0x100 ** (0x20 - (0x1f & msg.data[0x4 + _arg3])) - 0x1) & memory[msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])];
                                        }
                                    }
                                    if (~((0x1f & msg.data[0x4 + _arg3]) == 0)) {
                                        memory[msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])] = ~(0x100 ** (0x20 - (0x1f & msg.data[0x4 + _arg3])) - 0x1) & memory[msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])];
                                    }
                                }
                                if (~((0x1f & msg.data[0x4 + _arg3]) == 0)) {
                                    memory[msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])] = ~(0x100 ** (0x20 - (0x1f & msg.data[0x4 + _arg3])) - 0x1) & memory[msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])];
                                }
                            }
                            if (~((0x1f & msg.data[0x4 + _arg3]) == 0)) {
                                memory[msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])] = ~(0x100 ** (0x20 - (0x1f & msg.data[0x4 + _arg3])) - 0x1) & memory[msg.data[0x4 + _arg3] + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x24 + 0x40 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg3])];
                            }
                        }
                    }
                    if (~(mapping5[_arg2 << 0x0] - 0x1 < storage[0x0 + 0x0 + 0x3])) {
                        revert('Invalid instruction (0xfe)');
                    }
                    storage[0x1 + 0x2 * (mapping5[_arg2 << 0x0] - 0x1) + keccak256(0x3)] = _arg1 << 0x0;
                    emit Transfer(_arg0, _arg1, _arg2);
                }
                if (~(mapping5[_arg2 << 0x0] != 0x0)) {
                    memory[0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = _arg2 << 0x0;
                    memory[0x20 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = _arg1 << 0x0;
                    storage[0x3] += 0x1;
                    storage[0x2 * (storage[0x3] + 0x1 - 0x1) + keccak256(0x3)] = memory[0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20];
                    storage[0x1 + 0x2 * (storage[0x3] + 0x1 - 0x1) + keccak256(0x3)] = memory[0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x20];
                    mapping5[_arg2 << 0x0] = storage[0x0 + 0x0 + 0x3];
                    emit Transfer(_arg0, _arg1, _arg2);
                }
                if (~(mapping5[_arg2 << 0x0] - 0x1 < storage[0x0 + 0x0 + 0x3])) {
                    revert('Invalid instruction (0xfe)');
                }
                storage[0x1 + 0x2 * (mapping5[_arg2 << 0x0] - 0x1) + keccak256(0x3)] = _arg1 << 0x0;
                emit Transfer(_arg0, _arg1, _arg2);
            }
            if (~(storage[keccak256(_arg2 << 0x0, 0x1 + keccak256(_arg1, 0x2))] != 0x0)) {
                storage[keccak256(_arg1, 0x2)] += 0x1;
                storage[keccak256(keccak256(_arg1, 0x2)) + storage[keccak256(_arg1, 0x2)] + 0x1 - 0x1] = _arg2 << 0x0;
                storage[keccak256(_arg2 << 0x0, 0x1 + keccak256(_arg1, 0x2))] = storage[keccak256(_arg1, 0x2)];
                if (~(mapping5[_arg2 << 0x0] != 0x0)) {
                    memory[0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = _arg2 << 0x0;
                    memory[0x20 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = _arg1 << 0x0;
                    storage[0x3] += 0x1;
                    storage[0x2 * (storage[0x3] + 0x1 - 0x1) + keccak256(0x3)] = memory[0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20];
                    storage[0x1 + 0x2 * (storage[0x3] + 0x1 - 0x1) + keccak256(0x3)] = memory[0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x20];
                    mapping5[_arg2 << 0x0] = storage[0x0 + 0x0 + 0x3];
                    emit Transfer(_arg0, _arg1, _arg2);
                }
                if (~(mapping5[_arg2 << 0x0] - 0x1 < storage[0x0 + 0x0 + 0x3])) {
                    revert('Invalid instruction (0xfe)');
                }
                storage[0x1 + 0x2 * (mapping5[_arg2 << 0x0] - 0x1) + keccak256(0x3)] = _arg1 << 0x0;
                emit Transfer(_arg0, _arg1, _arg2);
            }
            if (~(mapping5[_arg2 << 0x0] != 0x0)) {
                memory[0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = _arg2 << 0x0;
                memory[0x20 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = _arg1 << 0x0;
                storage[0x3] += 0x1;
                storage[0x2 * (storage[0x3] + 0x1 - 0x1) + keccak256(0x3)] = memory[0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20];
                storage[0x1 + 0x2 * (storage[0x3] + 0x1 - 0x1) + keccak256(0x3)] = memory[0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x20];
                mapping5[_arg2 << 0x0] = storage[0x0 + 0x0 + 0x3];
                emit Transfer(_arg0, _arg1, _arg2);
            }
            if (~(mapping5[_arg2 << 0x0] - 0x1 < storage[0x0 + 0x0 + 0x3])) {
                revert('Invalid instruction (0xfe)');
            }
            storage[0x1 + 0x2 * (mapping5[_arg2 << 0x0] - 0x1) + keccak256(0x3)] = _arg1 << 0x0;
            emit Transfer(_arg0, _arg1, _arg2);
        }
        if (~((0xffffffffffffffffffffffffffffffffffffffff & 0xffffffffffffffffffffffffffffffffffffffff & mapping6[_arg2] / 0x100 ** 0x0) == (0xffffffffffffffffffffffffffffffffffffffff & msg.sender))) {
            memory[0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x8c379a000000000000000000000000000000000000000000000000000000000;
            memory[0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20;
            memory[0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x31;
            revert(memory[0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20:(0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20+0x40 + 0x20 + 0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20)]);
        }
        memory[0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x29;
        if (~(mapping5[_arg2 << 0x0] != 0x0)) {
            memory[0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x8c379a000000000000000000000000000000000000000000000000000000000;
            memory[0x4 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x20 + 0x4 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x4 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20;
            memory[0x20 + 0x4 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = memory[0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20];
        }
        if (~(mapping5[_arg2 << 0x0] - 0x1 < storage[0x0 + 0x0 + 0x3])) {
            revert('Invalid instruction (0xfe)');
        }
        if (~((0xffffffffffffffffffffffffffffffffffffffff & storage[0x1 + 0x2 * (mapping5[_arg2 << 0x0] - 0x1) + keccak256(0x3)] >>> 0x0) == (0xffffffffffffffffffffffffffffffffffffffff & 0xffffffffffffffffffffffffffffffffffffffff & _arg0))) {
            memory[0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x8c379a000000000000000000000000000000000000000000000000000000000;
            memory[0x4 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x20 + 0x4 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x4 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20;
            memory[0x20 + 0x4 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x29;
            revert(memory[0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20:(0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20+0x40 + 0x20 + 0x20 + 0x4 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20)]);
        }
        if (~((0xffffffffffffffffffffffffffffffffffffffff & 0xffffffffffffffffffffffffffffffffffffffff & _arg1) != (0xffffffffffffffffffffffffffffffffffffffff & 0x0))) {
            memory[0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x8c379a000000000000000000000000000000000000000000000000000000000;
            memory[0x4 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x20 + 0x4 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x4 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20;
            memory[0x20 + 0x4 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x24;
            revert(memory[0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20:(0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20+0x40 + 0x20 + 0x20 + 0x4 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20)]);
        }
        mapping6[_arg2] = (0xffffffffffffffffffffffffffffffffffffffff & 0x0) * 0x100 ** 0x0 | ~(0xffffffffffffffffffffffffffffffffffffffff * 0x100 ** 0x0) & mapping6[_arg2];
        memory[0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x29;
        if (~(mapping5[_arg2 << 0x0] != 0x0)) {
            memory[0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x8c379a000000000000000000000000000000000000000000000000000000000;
            memory[0x4 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x20 + 0x4 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x4 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20;
            memory[0x20 + 0x4 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = memory[0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20];
        }
        if (~(mapping5[_arg2 << 0x0] - 0x1 < storage[0x0 + 0x0 + 0x3])) {
            revert('Invalid instruction (0xfe)');
        }
        emit Approval(storage[0x1 + 0x2 * (mapping5[_arg2 << 0x0] - 0x1) + keccak256(0x3)] >>> 0x0, 0x0, _arg2);
        if (~(storage[keccak256(_arg2 << 0x0, 0x1 + keccak256(_arg0, 0x2))] == 0x0)) {
            if (~(storage[0x0 + 0x0 + keccak256(_arg0, 0x2)] - 0x1 < storage[0x0 + 0x0 + keccak256(_arg0, 0x2)])) {
                revert('Invalid instruction (0xfe)');
            }
            if (~(storage[keccak256(_arg2 << 0x0, 0x1 + keccak256(_arg0, 0x2))] - 0x1 < storage[0x0 + 0x0 + keccak256(_arg0, 0x2)])) {
                revert('Invalid instruction (0xfe)');
            }
            storage[keccak256(keccak256(_arg0, 0x2)) + storage[keccak256(_arg2 << 0x0, 0x1 + keccak256(_arg0, 0x2))] - 0x1] = storage[keccak256(keccak256(_arg0, 0x2)) + storage[keccak256(_arg0, 0x2)] - 0x1];
            storage[keccak256(storage[keccak256(keccak256(_arg0, 0x2)) + storage[keccak256(_arg0, 0x2)] - 0x1], 0x1 + keccak256(_arg0, 0x2))] = storage[keccak256(_arg2 << 0x0, 0x1 + keccak256(_arg0, 0x2))] - 0x1 + 0x1;
            if (~storage[0x0 + 0x0 + keccak256(_arg0, 0x2)]) {
                revert('Invalid instruction (0xfe)');
            }
            storage[keccak256(keccak256(_arg0, 0x2)) + storage[keccak256(_arg0, 0x2)] - 0x1] = 0x0;
            storage[keccak256(_arg0, 0x2)] -= 0x1;
            storage[keccak256(_arg2 << 0x0, 0x1 + keccak256(_arg0, 0x2))] = 0x0;
            if (~(storage[keccak256(_arg2 << 0x0, 0x1 + keccak256(_arg1, 0x2))] != 0x0)) {
                storage[keccak256(_arg1, 0x2)] += 0x1;
                storage[keccak256(keccak256(_arg1, 0x2)) + storage[keccak256(_arg1, 0x2)] + 0x1 - 0x1] = _arg2 << 0x0;
                storage[keccak256(_arg2 << 0x0, 0x1 + keccak256(_arg1, 0x2))] = storage[keccak256(_arg1, 0x2)];
                if (~(mapping5[_arg2 << 0x0] != 0x0)) {
                    memory[0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = _arg2 << 0x0;
                    memory[0x20 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = _arg1 << 0x0;
                    storage[0x3] += 0x1;
                    storage[0x2 * (storage[0x3] + 0x1 - 0x1) + keccak256(0x3)] = memory[0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20];
                    storage[0x1 + 0x2 * (storage[0x3] + 0x1 - 0x1) + keccak256(0x3)] = memory[0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x20];
                    mapping5[_arg2 << 0x0] = storage[0x0 + 0x0 + 0x3];
                    emit Transfer(_arg0, _arg1, _arg2);
                }
                if (~(mapping5[_arg2 << 0x0] - 0x1 < storage[0x0 + 0x0 + 0x3])) {
                    revert('Invalid instruction (0xfe)');
                }
                storage[0x1 + 0x2 * (mapping5[_arg2 << 0x0] - 0x1) + keccak256(0x3)] = _arg1 << 0x0;
                emit Transfer(_arg0, _arg1, _arg2);
            }
            if (~(mapping5[_arg2 << 0x0] != 0x0)) {
                memory[0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = _arg2 << 0x0;
                memory[0x20 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = _arg1 << 0x0;
                storage[0x3] += 0x1;
                storage[0x2 * (storage[0x3] + 0x1 - 0x1) + keccak256(0x3)] = memory[0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20];
                storage[0x1 + 0x2 * (storage[0x3] + 0x1 - 0x1) + keccak256(0x3)] = memory[0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x20];
                mapping5[_arg2 << 0x0] = storage[0x0 + 0x0 + 0x3];
                emit Transfer(_arg0, _arg1, _arg2);
            }
            if (~(mapping5[_arg2 << 0x0] - 0x1 < storage[0x0 + 0x0 + 0x3])) {
                revert('Invalid instruction (0xfe)');
            }
            storage[0x1 + 0x2 * (mapping5[_arg2 << 0x0] - 0x1) + keccak256(0x3)] = _arg1 << 0x0;
        }
        if (~(storage[keccak256(_arg2 << 0x0, 0x1 + keccak256(_arg1, 0x2))] != 0x0)) {
            storage[keccak256(_arg1, 0x2)] += 0x1;
            storage[keccak256(keccak256(_arg1, 0x2)) + storage[keccak256(_arg1, 0x2)] + 0x1 - 0x1] = _arg2 << 0x0;
            storage[keccak256(_arg2 << 0x0, 0x1 + keccak256(_arg1, 0x2))] = storage[keccak256(_arg1, 0x2)];
            if (~(mapping5[_arg2 << 0x0] != 0x0)) {
                memory[0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = _arg2 << 0x0;
                memory[0x20 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = _arg1 << 0x0;
                storage[0x3] += 0x1;
                storage[0x2 * (storage[0x3] + 0x1 - 0x1) + keccak256(0x3)] = memory[0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20];
                storage[0x1 + 0x2 * (storage[0x3] + 0x1 - 0x1) + keccak256(0x3)] = memory[0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x20];
                mapping5[_arg2 << 0x0] = storage[0x0 + 0x0 + 0x3];
            }
            if (~(mapping5[_arg2 << 0x0] - 0x1 < storage[0x0 + 0x0 + 0x3])) {
                revert('Invalid instruction (0xfe)');
            }
            storage[0x1 + 0x2 * (mapping5[_arg2 << 0x0] - 0x1) + keccak256(0x3)] = _arg1 << 0x0;
        }
        if (~(mapping5[_arg2 << 0x0] != 0x0)) {
            memory[0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = _arg2 << 0x0;
            memory[0x20 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = _arg1 << 0x0;
            storage[0x3] += 0x1;
            storage[0x2 * (storage[0x3] + 0x1 - 0x1) + keccak256(0x3)] = memory[0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20];
            storage[0x1 + 0x2 * (storage[0x3] + 0x1 - 0x1) + keccak256(0x3)] = memory[0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x20];
            mapping5[_arg2 << 0x0] = storage[0x0 + 0x0 + 0x3];
        }
        if (~(mapping5[_arg2 << 0x0] - 0x1 < storage[0x0 + 0x0 + 0x3])) {
            revert('Invalid instruction (0xfe)');
        }
        storage[0x1 + 0x2 * (mapping5[_arg2 << 0x0] - 0x1) + keccak256(0x3)] = _arg1 << 0x0;
    }
    if (~((0xffffffffffffffffffffffffffffffffffffffff & msg.sender) == (0xffffffffffffffffffffffffffffffffffffffff & storage[0x1 + 0x2 * (mapping5[_arg2 << 0x0] - 0x1) + keccak256(0x3)] >>> 0x0))) {
        if (~(0xff & mapping7[msg.sender] / 0x100 ** 0x0)) {
            memory[0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x8c379a000000000000000000000000000000000000000000000000000000000;
            memory[0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20;
            memory[0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x31;
            revert(memory[0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20:(0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20+0x40 + 0x20 + 0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20)]);
        }
        memory[0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x29;
        if (~(mapping5[_arg2 << 0x0] != 0x0)) {
            memory[0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x8c379a000000000000000000000000000000000000000000000000000000000;
            memory[0x4 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x20 + 0x4 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x4 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20;
            memory[0x20 + 0x4 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = memory[0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20];
        }
        if (~(mapping5[_arg2 << 0x0] - 0x1 < storage[0x0 + 0x0 + 0x3])) {
            revert('Invalid instruction (0xfe)');
        }
        if (~((0xffffffffffffffffffffffffffffffffffffffff & storage[0x1 + 0x2 * (mapping5[_arg2 << 0x0] - 0x1) + keccak256(0x3)] >>> 0x0) == (0xffffffffffffffffffffffffffffffffffffffff & 0xffffffffffffffffffffffffffffffffffffffff & _arg0))) {
            memory[0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x8c379a000000000000000000000000000000000000000000000000000000000;
            memory[0x4 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x20 + 0x4 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x4 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20;
            memory[0x20 + 0x4 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x29;
            revert(memory[0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20:(0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20+0x40 + 0x20 + 0x20 + 0x4 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20)]);
        }
        if (~((0xffffffffffffffffffffffffffffffffffffffff & 0xffffffffffffffffffffffffffffffffffffffff & _arg1) != (0xffffffffffffffffffffffffffffffffffffffff & 0x0))) {
            memory[0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x8c379a000000000000000000000000000000000000000000000000000000000;
            memory[0x4 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x20 + 0x4 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x4 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20;
            memory[0x20 + 0x4 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x24;
            revert(memory[0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20:(0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20+0x40 + 0x20 + 0x20 + 0x4 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20)]);
        }
        mapping6[_arg2] = (0xffffffffffffffffffffffffffffffffffffffff & 0x0) * 0x100 ** 0x0 | ~(0xffffffffffffffffffffffffffffffffffffffff * 0x100 ** 0x0) & mapping6[_arg2];
        memory[0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x29;
        if (~(mapping5[_arg2 << 0x0] != 0x0)) {
            memory[0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x8c379a000000000000000000000000000000000000000000000000000000000;
            memory[0x4 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x20 + 0x4 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x4 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20;
            memory[0x20 + 0x4 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = memory[0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20];
        }
        if (~(mapping5[_arg2 << 0x0] - 0x1 < storage[0x0 + 0x0 + 0x3])) {
            revert('Invalid instruction (0xfe)');
        }
        emit Approval(storage[0x1 + 0x2 * (mapping5[_arg2 << 0x0] - 0x1) + keccak256(0x3)] >>> 0x0, 0x0, _arg2);
        if (~(storage[keccak256(_arg2 << 0x0, 0x1 + keccak256(_arg0, 0x2))] == 0x0)) {
            if (~(storage[0x0 + 0x0 + keccak256(_arg0, 0x2)] - 0x1 < storage[0x0 + 0x0 + keccak256(_arg0, 0x2)])) {
                revert('Invalid instruction (0xfe)');
            }
            if (~(storage[keccak256(_arg2 << 0x0, 0x1 + keccak256(_arg0, 0x2))] - 0x1 < storage[0x0 + 0x0 + keccak256(_arg0, 0x2)])) {
                revert('Invalid instruction (0xfe)');
            }
            storage[keccak256(keccak256(_arg0, 0x2)) + storage[keccak256(_arg2 << 0x0, 0x1 + keccak256(_arg0, 0x2))] - 0x1] = storage[keccak256(keccak256(_arg0, 0x2)) + storage[keccak256(_arg0, 0x2)] - 0x1];
            storage[keccak256(storage[keccak256(keccak256(_arg0, 0x2)) + storage[keccak256(_arg0, 0x2)] - 0x1], 0x1 + keccak256(_arg0, 0x2))] = storage[keccak256(_arg2 << 0x0, 0x1 + keccak256(_arg0, 0x2))] - 0x1 + 0x1;
            if (~storage[0x0 + 0x0 + keccak256(_arg0, 0x2)]) {
                revert('Invalid instruction (0xfe)');
            }
            storage[keccak256(keccak256(_arg0, 0x2)) + storage[keccak256(_arg0, 0x2)] - 0x1] = 0x0;
            storage[keccak256(_arg0, 0x2)] -= 0x1;
            storage[keccak256(_arg2 << 0x0, 0x1 + keccak256(_arg0, 0x2))] = 0x0;
            if (~(storage[keccak256(_arg2 << 0x0, 0x1 + keccak256(_arg1, 0x2))] != 0x0)) {
                storage[keccak256(_arg1, 0x2)] += 0x1;
                storage[keccak256(keccak256(_arg1, 0x2)) + storage[keccak256(_arg1, 0x2)] + 0x1 - 0x1] = _arg2 << 0x0;
                storage[keccak256(_arg2 << 0x0, 0x1 + keccak256(_arg1, 0x2))] = storage[keccak256(_arg1, 0x2)];
                if (~(mapping5[_arg2 << 0x0] != 0x0)) {
                    memory[0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = _arg2 << 0x0;
                    memory[0x20 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = _arg1 << 0x0;
                    storage[0x3] += 0x1;
                    storage[0x2 * (storage[0x3] + 0x1 - 0x1) + keccak256(0x3)] = memory[0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20];
                    storage[0x1 + 0x2 * (storage[0x3] + 0x1 - 0x1) + keccak256(0x3)] = memory[0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x20];
                    mapping5[_arg2 << 0x0] = storage[0x0 + 0x0 + 0x3];
                }
                if (~(mapping5[_arg2 << 0x0] - 0x1 < storage[0x0 + 0x0 + 0x3])) {
                    revert('Invalid instruction (0xfe)');
                }
                storage[0x1 + 0x2 * (mapping5[_arg2 << 0x0] - 0x1) + keccak256(0x3)] = _arg1 << 0x0;
            }
            if (~(mapping5[_arg2 << 0x0] != 0x0)) {
                memory[0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = _arg2 << 0x0;
                memory[0x20 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = _arg1 << 0x0;
                storage[0x3] += 0x1;
                storage[0x2 * (storage[0x3] + 0x1 - 0x1) + keccak256(0x3)] = memory[0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20];
                storage[0x1 + 0x2 * (storage[0x3] + 0x1 - 0x1) + keccak256(0x3)] = memory[0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x20];
                mapping5[_arg2 << 0x0] = storage[0x0 + 0x0 + 0x3];
            }
            if (~(mapping5[_arg2 << 0x0] - 0x1 < storage[0x0 + 0x0 + 0x3])) {
                revert('Invalid instruction (0xfe)');
            }
            storage[0x1 + 0x2 * (mapping5[_arg2 << 0x0] - 0x1) + keccak256(0x3)] = _arg1 << 0x0;
        }
        if (~(storage[keccak256(_arg2 << 0x0, 0x1 + keccak256(_arg1, 0x2))] != 0x0)) {
            storage[keccak256(_arg1, 0x2)] += 0x1;
            storage[keccak256(keccak256(_arg1, 0x2)) + storage[keccak256(_arg1, 0x2)] + 0x1 - 0x1] = _arg2 << 0x0;
            storage[keccak256(_arg2 << 0x0, 0x1 + keccak256(_arg1, 0x2))] = storage[keccak256(_arg1, 0x2)];
            if (~(mapping5[_arg2 << 0x0] != 0x0)) {
                memory[0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = _arg2 << 0x0;
                memory[0x20 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = _arg1 << 0x0;
                storage[0x3] += 0x1;
                storage[0x2 * (storage[0x3] + 0x1 - 0x1) + keccak256(0x3)] = memory[0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20];
                storage[0x1 + 0x2 * (storage[0x3] + 0x1 - 0x1) + keccak256(0x3)] = memory[0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 + 0x20];
                mapping5[_arg2 << 0x0] = storage[0x0 + 0x0 + 0x3];
            }
            if (~(mapping5[_arg2 << 0x0] - 0x1 < storage[0x0 + 0x0 + 0x3])) {
                revert('Invalid instruction (0xfe)');
            }
            storage[0x1 + 0x2 * (mapping5[_arg2 << 0x0] - 0x1) + keccak256(0x3)] = _arg1 << 0x0;
        }
    }
    if (~((0xffffffffffffffffffffffffffffffffffffffff & msg.sender) == (0xffffffffffffffffffffffffffffffffffffffff & storage[0x1 + 0x2 * (mapping5[_arg2 << 0x0] - 0x1) + keccak256(0x3)] >>> 0x0))) {
        memory[0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x8c379a000000000000000000000000000000000000000000000000000000000;
        memory[0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20;
        memory[0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x31;
        revert(memory[0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20:(0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20+0x40 + 0x20 + 0x20 + 0x4 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20)]);
    }
    memory[0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x29;
    if (~(mapping5[_arg2 << 0x0] != 0x0)) {
        memory[0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x8c379a000000000000000000000000000000000000000000000000000000000;
        memory[0x4 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x20 + 0x4 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x4 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20;
        memory[0x20 + 0x4 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = memory[0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20];
    }
    if (~(mapping5[_arg2 << 0x0] - 0x1 < storage[0x0 + 0x0 + 0x3])) {
        revert('Invalid instruction (0xfe)');
    }
    if (~((0xffffffffffffffffffffffffffffffffffffffff & storage[0x1 + 0x2 * (mapping5[_arg2 << 0x0] - 0x1) + keccak256(0x3)] >>> 0x0) == (0xffffffffffffffffffffffffffffffffffffffff & 0xffffffffffffffffffffffffffffffffffffffff & _arg0))) {
        memory[0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x8c379a000000000000000000000000000000000000000000000000000000000;
        memory[0x4 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x20 + 0x4 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x4 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20;
        memory[0x20 + 0x4 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x29;
        revert(memory[0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20:(0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20+0x40 + 0x20 + 0x20 + 0x4 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20)]);
    }
    if (~((0xffffffffffffffffffffffffffffffffffffffff & 0xffffffffffffffffffffffffffffffffffffffff & _arg1) != (0xffffffffffffffffffffffffffffffffffffffff & 0x0))) {
        memory[0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x8c379a000000000000000000000000000000000000000000000000000000000;
        memory[0x4 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x20 + 0x4 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x4 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20;
        memory[0x20 + 0x4 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x24;
        revert(memory[0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20:(0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20+0x40 + 0x20 + 0x20 + 0x4 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20)]);
    }
    mapping6[_arg2] = (0xffffffffffffffffffffffffffffffffffffffff & 0x0) * 0x100 ** 0x0 | ~(0xffffffffffffffffffffffffffffffffffffffff * 0x100 ** 0x0) & mapping6[_arg2];
    memory[0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x29;
    if (~(mapping5[_arg2 << 0x0] != 0x0)) {
        memory[0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x8c379a000000000000000000000000000000000000000000000000000000000;
        memory[0x4 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = 0x20 + 0x4 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20 - 0x4 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20;
        memory[0x20 + 0x4 + 0x60 + 0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20] = memory[0x60 + 0x60 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg3]) / 0x20 * 0x20];
    }
    if (~(mapping5[_arg2 << 0x0] - 0x1 < storage[0x0 + 0x0 + 0x3])) {
        revert('Invalid instruction (0xfe)');
    }
    emit Approval(storage[0x1 + 0x2 * (mapping5[_arg2 << 0x0] - 0x1) + keccak256(0x3)] >>> 0x0, 0x0, _arg2);
    if (~(storage[keccak256(_arg2 << 0x0, 0x1 + keccak256(_arg0, 0x2))] == 0x0)) {
        if (~(storage[0x0 + 0x0 + keccak256(_arg0, 0x2)] - 0x1 < storage[0x0 + 0x0 + keccak256(_arg0, 0x2)])) {
            revert('Invalid instruction (0xfe)');
        }
        if (~(storage[keccak256(_arg2 << 0x0, 0x1 + keccak256(_arg0, 0x2))] - 0x1 < storage[0x0 + 0x0 + keccak256(_arg0, 0x2)])) {
            revert('Invalid instruction (0xfe)');
        }
        storage[keccak256(keccak256(_arg0, 0x2)) + storage[keccak256(_arg2 << 0x0, 0x1 + keccak256(_arg0, 0x2))] - 0x1] = storage[keccak256(keccak256(_arg0, 0x2)) + storage[keccak256(_arg0, 0x2)] - 0x1];
        storage[keccak256(storage[keccak256(keccak256(_arg0, 0x2)) + storage[keccak256(_arg0, 0x2)] - 0x1], 0x1 + keccak256(_arg0, 0x2))] = storage[keccak256(_arg2 << 0x0, 0x1 + keccak256(_arg0, 0x2))] - 0x1 + 0x1;
        if (~storage[0x0 + 0x0 + keccak256(_arg0, 0x2)]) {
            revert('Invalid instruction (0xfe)');
        }
        storage[keccak256(keccak256(_arg0, 0x2)) + storage[keccak256(_arg0, 0x2)] - 0x1] = 0x0;
        storage[keccak256(_arg0, 0x2)] -= 0x1;
        storage[keccak256(_arg2 << 0x0, 0x1 + keccak256(_arg0, 0x2))] = 0x0;
        if (~(storage[keccak256(_arg2 << 0x0, 0x1 + keccak256(_arg1, 0x2))] != 0x0)) {
            storage[keccak256(_arg1, 0x2)] += 0x1;
            storage[keccak256(keccak256(_arg1, 0x2)) + storage[keccak256(_arg1, 0x2)] + 0x1 - 0x1] = _arg2 << 0x0;
            storage[keccak256(_arg2 << 0x0, 0x1 + keccak256(_arg1, 0x2))] = storage[keccak256(_arg1, 0x2)];
        }
    }
    if (~(storage[keccak256(_arg2 << 0x0, 0x1 + keccak256(_arg1, 0x2))] != 0x0)) {
        storage[keccak256(_arg1, 0x2)] += 0x1;
        storage[keccak256(keccak256(_arg1, 0x2)) + storage[keccak256(_arg1, 0x2)] + 0x1 - 0x1] = _arg2 << 0x0;
        storage[keccak256(_arg2 << 0x0, 0x1 + keccak256(_arg1, 0x2))] = storage[keccak256(_arg1, 0x2)];
    }
}

function tokenURI(uint256 _arg0) public {
    require(msg.data.length - 0x4 >= 0x20);
    require(mapping5[_arg0 << 0x0] != 0x0, 0x8c379a000000000000000000000000000000000000000000000000000000000, memory[0xa0], memory[0xc0], memory[0xe0], memory[0x100]);
    if (~((0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 == 0)) {
        if (~(0x1f < (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2)) {
            if (~((0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 != 0x0)) {
                memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20;
                memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2;
                if (~(0x0 < (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 == 0)) {
                    memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = mapping10[_arg0] / 0x100 * 0x100;
                    if (~(0x0 + 0x20 < (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 == 0)) {
                        memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20] = memory[0xc0];
                        if (~(0x0 + 0x20 + 0x20 < (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 == 0)) {
                            memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x40] = memory[0xe0];
                            if (~(0x0 + 0x20 + 0x20 + 0x20 < (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 == 0)) {
                                memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x60] = memory[0x100];
                                if (~(0x0 + 0x20 + 0x20 + 0x20 + 0x20 < (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 == 0)) {
                                    memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x80] = memory[0x120];
                                    if (~(0x0 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 < (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 == 0)) {
                                        memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0xa0] = memory[0x140];
                                        if (~(0x0 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 < (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 == 0)) {
                                            memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0xc0] = memory[0x160];
                                            if (~(0x0 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 < (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 == 0)) {
                                                memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0xe0] = memory[0x180];
                                                if (~(0x0 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 < (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 == 0)) {
                                                    memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x100] = memory[0x1a0];
                                                    if (~(0x0 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 < (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 == 0)) {
                                                        memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x120] = memory[0x1c0];
                                                        if (~(0x0 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 < (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 == 0)) {
                                                            memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x140] = memory[0x1e0];
                                                        }
                                                        if (~((0x1f & (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) == 0)) {
                                                            memory[(0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2)] = ~(0x100 ** (0x20 - (0x1f & (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2)) - 0x1) & memory[(0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2)];
                                                            return memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20:(0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20+0x20 + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20)];
                                                        }
                                                        return memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20:(0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20+(0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20)];
                                                    }
                                                    if (~((0x1f & (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) == 0)) {
                                                        memory[(0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2)] = ~(0x100 ** (0x20 - (0x1f & (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2)) - 0x1) & memory[(0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2)];
                                                        return memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20:(0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20+0x20 + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20)];
                                                    }
                                                    return memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20:(0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20+(0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20)];
                                                }
                                                if (~((0x1f & (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) == 0)) {
                                                    memory[(0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2)] = ~(0x100 ** (0x20 - (0x1f & (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2)) - 0x1) & memory[(0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2)];
                                                    return memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20:(0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20+0x20 + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20)];
                                                }
                                                return memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20:(0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20+(0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20)];
                                            }
                                            if (~((0x1f & (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) == 0)) {
                                                memory[(0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2)] = ~(0x100 ** (0x20 - (0x1f & (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2)) - 0x1) & memory[(0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2)];
                                                return memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20:(0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20+0x20 + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20)];
                                            }
                                            return memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20:(0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20+(0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20)];
                                        }
                                        if (~((0x1f & (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) == 0)) {
                                            memory[(0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2)] = ~(0x100 ** (0x20 - (0x1f & (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2)) - 0x1) & memory[(0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2)];
                                            return memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20:(0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20+0x20 + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20)];
                                        }
                                        return memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20:(0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20+(0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20)];
                                    }
                                    if (~((0x1f & (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) == 0)) {
                                        memory[(0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2)] = ~(0x100 ** (0x20 - (0x1f & (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2)) - 0x1) & memory[(0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2)];
                                        return memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20:(0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20+0x20 + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20)];
                                    }
                                }
                                if (~((0x1f & (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) == 0)) {
                                    memory[(0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2)] = ~(0x100 ** (0x20 - (0x1f & (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2)) - 0x1) & memory[(0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2)];
                                }
                            }
                            if (~((0x1f & (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) == 0)) {
                                memory[(0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2)] = ~(0x100 ** (0x20 - (0x1f & (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2)) - 0x1) & memory[(0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2)];
                            }
                        }
                        if (~((0x1f & (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) == 0)) {
                            memory[(0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2)] = ~(0x100 ** (0x20 - (0x1f & (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2)) - 0x1) & memory[(0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2)];
                        }
                    }
                    if (~((0x1f & (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) == 0)) {
                        memory[(0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2)] = ~(0x100 ** (0x20 - (0x1f & (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2)) - 0x1) & memory[(0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2)];
                    }
                }
                if (~((0x1f & (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) == 0)) {
                    memory[(0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2)] = ~(0x100 ** (0x20 - (0x1f & (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2)) - 0x1) & memory[(0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2)];
                }
            }
            if (~((0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 > 0x0 == 0)) {
                if (~((0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 == 0)) {
                    if (~(0x1f < (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2)) {
                        memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = var2 / 0x100 * 0x100;
                        if (~((0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 < 0x20)) {
                            memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = mapping10[_arg0] / 0x100 * 0x100;
                            if (~((0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 - 0x20 < 0x20)) {
                                memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20] = memory[0xc0];
                                if (~((0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 - 0x20 - 0x20 < 0x20)) {
                                    memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20] = memory[0xe0];
                                    if (~((0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 - 0x20 - 0x20 - 0x20 < 0x20)) {
                                        memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20] = memory[0x100];
                                        if (~((0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 - 0x20 - 0x20 - 0x20 - 0x20 < 0x20)) {
                                            memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20] = memory[0x120];
                                            if (~((0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 < 0x20)) {
                                                memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] = memory[0x140];
                                                if (~((0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 < 0x20)) {
                                                    memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] = memory[0x160];
                                                    if (~((0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 < 0x20)) {
                                                        memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] = memory[0x180];
                                                        if (~((0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 < 0x20)) {
                                                            memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] = memory[0x1a0];
                                                            if (~((0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 < 0x20)) {
                                                                memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] = memory[0x1c0];
                                                                if (~((0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 < 0x20)) {
                                                                    memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] = memory[0x1e0];
                                                                }
                                                                memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] = memory[0x1e0] & ~(0x100 ** (0x20 - (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20) - 0x1) | memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] & 0x100 ** (0x20 - (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20) - 0x1;
                                                                memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - 0x20;
                                                                memory[(0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = 0x20 + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20;
                                                                memory[0x20 + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20];
                                                            }
                                                            memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] = memory[0x1c0] & ~(0x100 ** (0x20 - (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20) - 0x1) | memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] & 0x100 ** (0x20 - (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20) - 0x1;
                                                            memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - 0x20;
                                                            memory[(0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = 0x20 + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20;
                                                            memory[0x20 + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20];
                                                        }
                                                        memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] = memory[0x1a0] & ~(0x100 ** (0x20 - (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20) - 0x1) | memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] & 0x100 ** (0x20 - (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20) - 0x1;
                                                        memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - 0x20;
                                                        memory[(0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = 0x20 + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20;
                                                        memory[0x20 + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20];
                                                    }
                                                    memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] = memory[0x180] & ~(0x100 ** (0x20 - (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20) - 0x1) | memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] & 0x100 ** (0x20 - (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20) - 0x1;
                                                    memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - 0x20;
                                                    memory[(0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = 0x20 + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20;
                                                    memory[0x20 + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20];
                                                }
                                                memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] = memory[0x160] & ~(0x100 ** (0x20 - (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20) - 0x1) | memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] & 0x100 ** (0x20 - (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20) - 0x1;
                                                memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - 0x20;
                                                memory[(0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = 0x20 + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20;
                                                memory[0x20 + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20];
                                            }
                                            memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] = memory[0x140] & ~(0x100 ** (0x20 - (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20) - 0x1) | memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] & 0x100 ** (0x20 - (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20) - 0x1;
                                            memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - 0x20;
                                            memory[(0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = 0x20 + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20;
                                            memory[0x20 + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20];
                                        }
                                        memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20] = memory[0x120] & ~(0x100 ** (0x20 - (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 - 0x20 - 0x20 - 0x20 - 0x20) - 0x1) | memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20] & 0x100 ** (0x20 - (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 - 0x20 - 0x20 - 0x20 - 0x20) - 0x1;
                                        memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - 0x20;
                                        memory[(0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = 0x20 + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20;
                                        memory[0x20 + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20];
                                    }
                                    memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20] = memory[0x100] & ~(0x100 ** (0x20 - (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 - 0x20 - 0x20 - 0x20) - 0x1) | memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20] & 0x100 ** (0x20 - (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 - 0x20 - 0x20 - 0x20) - 0x1;
                                    memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - 0x20;
                                    memory[(0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = 0x20 + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20;
                                    memory[0x20 + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20];
                                }
                                memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20] = memory[0xe0] & ~(0x100 ** (0x20 - (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 - 0x20 - 0x20) - 0x1) | memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20] & 0x100 ** (0x20 - (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 - 0x20 - 0x20) - 0x1;
                                memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - 0x20;
                                memory[(0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = 0x20 + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20;
                                memory[0x20 + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20];
                            }
                            memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20] = memory[0xc0] & ~(0x100 ** (0x20 - (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 - 0x20) - 0x1) | memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20] & 0x100 ** (0x20 - (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 - 0x20) - 0x1;
                            memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - 0x20;
                            memory[(0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = 0x20 + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20;
                            memory[0x20 + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20];
                        }
                        memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = mapping10[_arg0] / 0x100 * 0x100 & ~(0x100 ** (0x20 - (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) - 0x1) | memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] & 0x100 ** (0x20 - (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) - 0x1;
                        memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - 0x20;
                    }
                    memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = storage[keccak256(0xa)];
                    if (~(0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 > 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20)) {
                    }
                    memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = storage[0x1 + keccak256(0xa)];
                    if (~(0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 > 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20)) {
                    }
                    memory[0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = storage[0x1 + 0x1 + keccak256(0xa)];
                    if (~(0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20)) {
                    }
                    memory[0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = storage[0x1 + 0x1 + 0x1 + keccak256(0xa)];
                    if (~(0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20)) {
                    }
                    memory[0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = storage[0x1 + 0x1 + 0x1 + 0x1 + keccak256(0xa)];
                    if (~(0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20)) {
                    }
                    memory[0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = storage[0x1 + 0x1 + 0x1 + 0x1 + 0x1 + keccak256(0xa)];
                    if (~(0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20)) {
                    }
                    memory[0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = storage[0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + keccak256(0xa)];
                    if (~(0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20)) {
                    }
                    memory[0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = storage[0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + keccak256(0xa)];
                    if (~(0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20)) {
                    }
                    memory[0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = storage[0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + keccak256(0xa)];
                    if (~(0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20)) {
                    }
                    memory[0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = storage[0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + keccak256(0xa)];
                    if (~(0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20)) {
                    }
                    memory[0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = storage[0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + keccak256(0xa)];
                    if (~(0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20)) {
                    }
                }
            }
            if (~(_arg0 != 0x0)) {
                memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = 0x1;
                memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = 0x3000000000000000000000000000000000000000000000000000000000000000;
                if (~((0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 == 0)) {
                    if (~(0x1f < (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2)) {
                        memory[0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = var2 / 0x100 * 0x100;
                        if (~(memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] < 0x20)) {
                            memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20];
                            if (~(memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] - 0x20 < 0x20)) {
                                memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20] = memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20];
                                if (~(memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] - 0x20 - 0x20 < 0x20)) {
                                    memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20] = memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20];
                                    if (~(memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] - 0x20 - 0x20 - 0x20 < 0x20)) {
                                        memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20] = memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20];
                                        if (~(memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] - 0x20 - 0x20 - 0x20 - 0x20 < 0x20)) {
                                            memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20] = memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20];
                                            if (~(memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 < 0x20)) {
                                                memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] = memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20];
                                                if (~(memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 < 0x20)) {
                                                    memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] = memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20];
                                                    if (~(memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 < 0x20)) {
                                                        memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] = memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20];
                                                        if (~(memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 < 0x20)) {
                                                            memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] = memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20];
                                                            if (~(memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 < 0x20)) {
                                                                memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] = memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20];
                                                                if (~(memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 < 0x20)) {
                                                                    memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] = memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20];
                                                                }
                                                                memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] = memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] & ~(0x100 ** (0x20 - memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20) - 0x1) | memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] & 0x100 ** (0x20 - memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20) - 0x1;
                                                                memory[0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - 0x20;
                                                            }
                                                            memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] = memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] & ~(0x100 ** (0x20 - memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20) - 0x1) | memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] & 0x100 ** (0x20 - memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20) - 0x1;
                                                            memory[0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - 0x20;
                                                        }
                                                        memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] = memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] & ~(0x100 ** (0x20 - memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20) - 0x1) | memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] & 0x100 ** (0x20 - memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20) - 0x1;
                                                        memory[0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - 0x20;
                                                    }
                                                    memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] = memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] & ~(0x100 ** (0x20 - memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20) - 0x1) | memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] & 0x100 ** (0x20 - memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20) - 0x1;
                                                    memory[0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - 0x20;
                                                }
                                                memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] = memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] & ~(0x100 ** (0x20 - memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20) - 0x1) | memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] & 0x100 ** (0x20 - memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20) - 0x1;
                                                memory[0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - 0x20;
                                            }
                                            memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] = memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] & ~(0x100 ** (0x20 - memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] - 0x20 - 0x20 - 0x20 - 0x20 - 0x20) - 0x1) | memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] & 0x100 ** (0x20 - memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] - 0x20 - 0x20 - 0x20 - 0x20 - 0x20) - 0x1;
                                            memory[0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - 0x20;
                                        }
                                        memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20] = memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20] & ~(0x100 ** (0x20 - memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] - 0x20 - 0x20 - 0x20 - 0x20) - 0x1) | memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20] & 0x100 ** (0x20 - memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] - 0x20 - 0x20 - 0x20 - 0x20) - 0x1;
                                        memory[0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - 0x20;
                                    }
                                    memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20] = memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20] & ~(0x100 ** (0x20 - memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] - 0x20 - 0x20 - 0x20) - 0x1) | memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20] & 0x100 ** (0x20 - memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] - 0x20 - 0x20 - 0x20) - 0x1;
                                    memory[0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - 0x20;
                                }
                                memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20] = memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20] & ~(0x100 ** (0x20 - memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] - 0x20 - 0x20) - 0x1) | memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20 + 0x20] & 0x100 ** (0x20 - memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] - 0x20 - 0x20) - 0x1;
                                memory[0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - 0x20;
                            }
                            memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20] = memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20] & ~(0x100 ** (0x20 - memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] - 0x20) - 0x1) | memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20] & 0x100 ** (0x20 - memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] - 0x20) - 0x1;
                            memory[0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - 0x20;
                        }
                        memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] & ~(0x100 ** (0x20 - memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20]) - 0x1) | memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] & 0x100 ** (0x20 - memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20]) - 0x1;
                        memory[0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 - 0x20;
                    }
                    memory[0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = storage[keccak256(0xa)];
                    if (~(0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 > 0x20 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20)) {
                    }
                    memory[0x20 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = storage[0x1 + keccak256(0xa)];
                    if (~(0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 > 0x20 + 0x20 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20)) {
                    }
                    memory[0x20 + 0x20 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = storage[0x1 + 0x1 + keccak256(0xa)];
                    if (~(0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20)) {
                    }
                    memory[0x20 + 0x20 + 0x20 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = storage[0x1 + 0x1 + 0x1 + keccak256(0xa)];
                    if (~(0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20)) {
                    }
                    memory[0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = storage[0x1 + 0x1 + 0x1 + 0x1 + keccak256(0xa)];
                    if (~(0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20)) {
                    }
                    memory[0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = storage[0x1 + 0x1 + 0x1 + 0x1 + 0x1 + keccak256(0xa)];
                    if (~(0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20)) {
                    }
                    memory[0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = storage[0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + keccak256(0xa)];
                    if (~(0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20)) {
                    }
                    memory[0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = storage[0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + keccak256(0xa)];
                    if (~(0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20)) {
                    }
                    memory[0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = storage[0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + keccak256(0xa)];
                    if (~(0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20)) {
                    }
                    memory[0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = storage[0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + keccak256(0xa)];
                    if (~(0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20)) {
                    }
                    memory[0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = storage[0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + keccak256(0xa)];
                    if (~(0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x40 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20)) {
                    }
                }
            }
            if (~(_arg0 == 0x0)) {
                if (~(_arg0 / 0xa == 0x0)) {
                    if (~(_arg0 / 0xa / 0xa == 0x0)) {
                        if (~(_arg0 / 0xa / 0xa / 0xa == 0x0)) {
                            if (~(_arg0 / 0xa / 0xa / 0xa / 0xa == 0x0)) {
                                if (~(_arg0 / 0xa / 0xa / 0xa / 0xa / 0xa == 0x0)) {
                                    if (~(_arg0 / 0xa / 0xa / 0xa / 0xa / 0xa / 0xa == 0x0)) {
                                        if (~(_arg0 / 0xa / 0xa / 0xa / 0xa / 0xa / 0xa / 0xa == 0x0)) {
                                            if (~(_arg0 / 0xa / 0xa / 0xa / 0xa / 0xa / 0xa / 0xa / 0xa == 0x0)) {
                                                if (~(_arg0 / 0xa / 0xa / 0xa / 0xa / 0xa / 0xa / 0xa / 0xa / 0xa == 0x0)) {
                                                    if (~(_arg0 / 0xa / 0xa / 0xa / 0xa / 0xa / 0xa / 0xa / 0xa / 0xa / 0xa == 0x0)) {
                                                    }
                                                    memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = 0xa;
                                                    if (~(_arg0 == 0x0)) {
                                                        if (~(0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x0 - 0x1 < memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20])) {
                                                            revert('Invalid instruction (0xfe)');
                                                        }
                                                        memory[0x29 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = ((0xff00000000000000000000000000000000000000000000000000000000000000 & 0x30 + _arg0 % 0xa << 0xf8) >> 0x0) & 1;
                                                        if (~(_arg0 / 0xa == 0x0)) {
                                                            if (~(0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x0 - 0x1 - 0x1 < memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20])) {
                                                                revert('Invalid instruction (0xfe)');
                                                            }
                                                            memory[0x28 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = ((0xff00000000000000000000000000000000000000000000000000000000000000 & 0x30 + _arg0 / 0xa % 0xa << 0xf8) >> 0x0) & 1;
                                                            if (~(_arg0 / 0xa / 0xa == 0x0)) {
                                                                if (~(0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x0 - 0x1 - 0x1 - 0x1 < memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20])) {
                                                                    revert('Invalid instruction (0xfe)');
                                                                }
                                                                memory[0x27 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = ((0xff00000000000000000000000000000000000000000000000000000000000000 & 0x30 + _arg0 / 0xa / 0xa % 0xa << 0xf8) >> 0x0) & 1;
                                                                if (~(_arg0 / 0xa / 0xa / 0xa == 0x0)) {
                                                                    if (~(0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x0 - 0x1 - 0x1 - 0x1 - 0x1 < memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20])) {
                                                                        revert('Invalid instruction (0xfe)');
                                                                    }
                                                                    memory[0x26 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = ((0xff00000000000000000000000000000000000000000000000000000000000000 & 0x30 + _arg0 / 0xa / 0xa / 0xa % 0xa << 0xf8) >> 0x0) & 1;
                                                                    if (~(_arg0 / 0xa / 0xa / 0xa / 0xa == 0x0)) {
                                                                        if (~(0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x0 - 0x1 - 0x1 - 0x1 - 0x1 - 0x1 < memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20])) {
                                                                            revert('Invalid instruction (0xfe)');
                                                                        }
                                                                        memory[0x25 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = ((0xff00000000000000000000000000000000000000000000000000000000000000 & 0x30 + _arg0 / 0xa / 0xa / 0xa / 0xa % 0xa << 0xf8) >> 0x0) & 1;
                                                                        if (~(_arg0 / 0xa / 0xa / 0xa / 0xa / 0xa == 0x0)) {
                                                                            if (~(0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x0 - 0x1 - 0x1 - 0x1 - 0x1 - 0x1 - 0x1 < memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20])) {
                                                                                revert('Invalid instruction (0xfe)');
                                                                            }
                                                                            memory[0x24 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = ((0xff00000000000000000000000000000000000000000000000000000000000000 & 0x30 + _arg0 / 0xa / 0xa / 0xa / 0xa / 0xa % 0xa << 0xf8) >> 0x0) & 1;
                                                                            if (~(_arg0 / 0xa / 0xa / 0xa / 0xa / 0xa / 0xa == 0x0)) {
                                                                                if (~(0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x0 - 0x1 - 0x1 - 0x1 - 0x1 - 0x1 - 0x1 - 0x1 < memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20])) {
                                                                                    revert('Invalid instruction (0xfe)');
                                                                                }
                                                                                memory[0x23 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = ((0xff00000000000000000000000000000000000000000000000000000000000000 & 0x30 + _arg0 / 0xa / 0xa / 0xa / 0xa / 0xa / 0xa % 0xa << 0xf8) >> 0x0) & 1;
                                                                                if (~(_arg0 / 0xa / 0xa / 0xa / 0xa / 0xa / 0xa / 0xa == 0x0)) {
                                                                                    if (~(0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x0 - 0x1 - 0x1 - 0x1 - 0x1 - 0x1 - 0x1 - 0x1 - 0x1 < memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20])) {
                                                                                        revert('Invalid instruction (0xfe)');
                                                                                    }
                                                                                    memory[0x22 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = ((0xff00000000000000000000000000000000000000000000000000000000000000 & 0x30 + _arg0 / 0xa / 0xa / 0xa / 0xa / 0xa / 0xa / 0xa % 0xa << 0xf8) >> 0x0) & 1;
                                                                                    if (~(_arg0 / 0xa / 0xa / 0xa / 0xa / 0xa / 0xa / 0xa / 0xa == 0x0)) {
                                                                                        if (~(0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x0 - 0x1 - 0x1 - 0x1 - 0x1 - 0x1 - 0x1 - 0x1 - 0x1 - 0x1 < memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20])) {
                                                                                            revert('Invalid instruction (0xfe)');
                                                                                        }
                                                                                        memory[0x21 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = ((0xff00000000000000000000000000000000000000000000000000000000000000 & 0x30 + _arg0 / 0xa / 0xa / 0xa / 0xa / 0xa / 0xa / 0xa / 0xa % 0xa << 0xf8) >> 0x0) & 1;
                                                                                        if (~(_arg0 / 0xa / 0xa / 0xa / 0xa / 0xa / 0xa / 0xa / 0xa / 0xa == 0x0)) {
                                                                                            if (~(0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x0 - 0x1 - 0x1 - 0x1 - 0x1 - 0x1 - 0x1 - 0x1 - 0x1 - 0x1 - 0x1 < memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20])) {
                                                                                                revert('Invalid instruction (0xfe)');
                                                                                            }
                                                                                            memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = ((0xff00000000000000000000000000000000000000000000000000000000000000 & 0x30 + _arg0 / 0xa / 0xa / 0xa / 0xa / 0xa / 0xa / 0xa / 0xa / 0xa % 0xa << 0xf8) >> 0x0) & 1;
                                                                                            if (~(_arg0 / 0xa / 0xa / 0xa / 0xa / 0xa / 0xa / 0xa / 0xa / 0xa / 0xa == 0x0)) {
                                                                                                if (~(0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x0 - 0x1 - 0x1 - 0x1 - 0x1 - 0x1 - 0x1 - 0x1 - 0x1 - 0x1 - 0x1 - 0x1 < memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20])) {
                                                                                                    revert('Invalid instruction (0xfe)');
                                                                                                }
                                                                                                memory[0x1f + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = ((0xff00000000000000000000000000000000000000000000000000000000000000 & 0x30 + _arg0 / 0xa / 0xa / 0xa / 0xa / 0xa / 0xa / 0xa / 0xa / 0xa / 0xa % 0xa << 0xf8) >> 0x0) & 1;
                                                                                            }
                                                                                            if (~((0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 == 0)) {
                                                                                                if (~(0x1f < (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2)) {
                                                                                                    memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x40] = var2 / 0x100 * 0x100;
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                        if (~((0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 == 0)) {
                                                                                            if (~(0x1f < (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2)) {
                                                                                                memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x40] = var2 / 0x100 * 0x100;
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                    if (~((0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 == 0)) {
                                                                                        if (~(0x1f < (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2)) {
                                                                                            memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x40] = var2 / 0x100 * 0x100;
                                                                                        }
                                                                                    }
                                                                                }
                                                                                if (~((0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 == 0)) {
                                                                                    if (~(0x1f < (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2)) {
                                                                                        memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x40] = var2 / 0x100 * 0x100;
                                                                                    }
                                                                                }
                                                                            }
                                                                            if (~((0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 == 0)) {
                                                                                if (~(0x1f < (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2)) {
                                                                                    memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x40] = var2 / 0x100 * 0x100;
                                                                                }
                                                                            }
                                                                        }
                                                                        if (~((0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 == 0)) {
                                                                            if (~(0x1f < (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2)) {
                                                                                memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x40] = var2 / 0x100 * 0x100;
                                                                            }
                                                                        }
                                                                    }
                                                                    if (~((0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 == 0)) {
                                                                        if (~(0x1f < (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2)) {
                                                                            memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x40] = var2 / 0x100 * 0x100;
                                                                        }
                                                                    }
                                                                }
                                                                if (~((0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 == 0)) {
                                                                    if (~(0x1f < (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2)) {
                                                                        memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x40] = var2 / 0x100 * 0x100;
                                                                    }
                                                                }
                                                            }
                                                            if (~((0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 == 0)) {
                                                                if (~(0x1f < (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2)) {
                                                                    memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x40] = var2 / 0x100 * 0x100;
                                                                }
                                                            }
                                                        }
                                                        if (~((0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 == 0)) {
                                                            if (~(0x1f < (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2)) {
                                                                memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20 + 0x40] = var2 / 0x100 * 0x100;
                                                            }
                                                        }
                                                    }
                                                }
                                                memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = 0x9;
                                            }
                                            memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = 0x8;
                                        }
                                        memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = 0x7;
                                    }
                                    memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = 0x6;
                                }
                                memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = 0x5;
                            }
                            memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = 0x4;
                        }
                        memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = 0x3;
                    }
                    memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = 0x2;
                }
                memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = 0x1;
            }
            memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = 0x0;
        }
        if (~(0x20 + 0x80 + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 > 0x20 + 0x20 + 0x80)) {
            if (~((0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 != 0x0)) {
            }
            if (~((0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 > 0x0 == 0)) {
                if (~((0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 == 0)) {
                    if (~(0x1f < (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2)) {
                        memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = var2 / 0x100 * 0x100;
                    }
                }
            }
            if (~(_arg0 != 0x0)) {
                memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = 0x1;
                memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = 0x3000000000000000000000000000000000000000000000000000000000000000;
            }
        }
        if (~(0x20 + 0x80 + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 > 0x20 + 0x20 + 0x20 + 0x80)) {
            if (~((0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 != 0x0)) {
            }
            if (~((0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 > 0x0 == 0)) {
                if (~((0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 == 0)) {
                    if (~(0x1f < (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2)) {
                        memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = var2 / 0x100 * 0x100;
                    }
                }
            }
            if (~(_arg0 != 0x0)) {
                memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = 0x1;
                memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = 0x3000000000000000000000000000000000000000000000000000000000000000;
            }
        }
        if (~(0x20 + 0x80 + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x80)) {
            if (~((0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 != 0x0)) {
            }
            if (~((0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 > 0x0 == 0)) {
                if (~((0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 == 0)) {
                    if (~(0x1f < (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2)) {
                        memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = var2 / 0x100 * 0x100;
                    }
                }
            }
            if (~(_arg0 != 0x0)) {
                memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = 0x1;
                memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = 0x3000000000000000000000000000000000000000000000000000000000000000;
            }
        }
        if (~(0x20 + 0x80 + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80)) {
            if (~((0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 != 0x0)) {
            }
            if (~((0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 > 0x0 == 0)) {
                if (~((0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 == 0)) {
                    if (~(0x1f < (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2)) {
                        memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = var2 / 0x100 * 0x100;
                    }
                }
            }
            if (~(_arg0 != 0x0)) {
                memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = 0x1;
                memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = 0x3000000000000000000000000000000000000000000000000000000000000000;
            }
        }
        if (~(0x20 + 0x80 + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80)) {
            if (~((0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 != 0x0)) {
            }
            if (~((0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 > 0x0 == 0)) {
                if (~((0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 == 0)) {
                    if (~(0x1f < (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2)) {
                        memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = var2 / 0x100 * 0x100;
                    }
                }
            }
            if (~(_arg0 != 0x0)) {
                memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = 0x1;
                memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = 0x3000000000000000000000000000000000000000000000000000000000000000;
            }
        }
        if (~(0x20 + 0x80 + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80)) {
            if (~((0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 != 0x0)) {
            }
            if (~((0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 > 0x0 == 0)) {
                if (~((0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 == 0)) {
                    if (~(0x1f < (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2)) {
                        memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = var2 / 0x100 * 0x100;
                    }
                }
            }
            if (~(_arg0 != 0x0)) {
                memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = 0x1;
                memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = 0x3000000000000000000000000000000000000000000000000000000000000000;
            }
        }
        if (~(0x20 + 0x80 + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80)) {
            if (~((0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 != 0x0)) {
            }
            if (~((0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 > 0x0 == 0)) {
                if (~((0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 == 0)) {
                    if (~(0x1f < (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2)) {
                        memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = var2 / 0x100 * 0x100;
                    }
                }
            }
            if (~(_arg0 != 0x0)) {
                memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = 0x1;
                memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = 0x3000000000000000000000000000000000000000000000000000000000000000;
            }
        }
        if (~(0x20 + 0x80 + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80)) {
            if (~((0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 != 0x0)) {
            }
            if (~((0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 > 0x0 == 0)) {
                if (~((0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 == 0)) {
                    if (~(0x1f < (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2)) {
                        memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = var2 / 0x100 * 0x100;
                    }
                }
            }
            if (~(_arg0 != 0x0)) {
                memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = 0x1;
                memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = 0x3000000000000000000000000000000000000000000000000000000000000000;
            }
        }
        if (~(0x20 + 0x80 + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80)) {
            if (~((0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 != 0x0)) {
            }
            if (~((0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 > 0x0 == 0)) {
                if (~((0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 == 0)) {
                    if (~(0x1f < (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2)) {
                        memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = var2 / 0x100 * 0x100;
                    }
                }
            }
            if (~(_arg0 != 0x0)) {
                memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = 0x1;
                memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = 0x3000000000000000000000000000000000000000000000000000000000000000;
            }
        }
        if (~(0x20 + 0x80 + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80)) {
            if (~((0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 != 0x0)) {
            }
            if (~((0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 > 0x0 == 0)) {
                if (~((0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 == 0)) {
                    if (~(0x1f < (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2)) {
                        memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = var2 / 0x100 * 0x100;
                    }
                }
            }
            if (~(_arg0 != 0x0)) {
                memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = 0x1;
                memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2) / 0x20 * 0x20] = 0x3000000000000000000000000000000000000000000000000000000000000000;
            }
        }
        if (~(0x20 + 0x80 + (0x100 * ((0x1 & mapping10[_arg0]) == 0) - 0x1 & mapping10[_arg0]) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80)) {
        }
    }
}

function isApprovedForAll(address _arg0, address _arg1) public returns (unknown) {
    require(msg.data.length - 0x4 >= 0x40);
    return mapping7[_arg1];
}

function transferOwnership(address _arg0) public {
    require(msg.data.length - 0x4 >= 0x20);
    require(var1 == msg.sender, 0x8c379a000000000000000000000000000000000000000000000000000000000, memory[0xa0], memory[0xc0], memory[0xe0]);
    require(_arg0 != 0x0, 0x8c379a000000000000000000000000000000000000000000000000000000000, memory[0xa0], memory[0xc0], memory[0xe0], memory[0x100]);
    emit OwnershipTransferred(var1, _arg0);
    var1 = _arg0 * 0x1 | 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 & var1;
    return;
}

function owner() public view returns (unknown) {
    return var1;
}

function symbol() public {
    if (~((0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2 == 0)) {
        if (~(0x1f < (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2)) {
            memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20] = 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20;
            memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20] = (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2;
            if (~(0x0 < (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2 == 0)) {
                memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20] = storage[0x8] / 0x100 * 0x100;
                if (~(0x0 + 0x20 < (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2 == 0)) {
                    memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20 + 0x20] = memory[0xc0];
                    if (~(0x0 + 0x20 + 0x20 < (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2 == 0)) {
                        memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20 + 0x40] = memory[0xe0];
                        if (~(0x0 + 0x20 + 0x20 + 0x20 < (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2 == 0)) {
                            memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20 + 0x60] = memory[0x100];
                            if (~(0x0 + 0x20 + 0x20 + 0x20 + 0x20 < (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2 == 0)) {
                                memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20 + 0x80] = memory[0x120];
                                if (~(0x0 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 < (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2 == 0)) {
                                    memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20 + 0xa0] = memory[0x140];
                                    if (~(0x0 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 < (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2 == 0)) {
                                        memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20 + 0xc0] = memory[0x160];
                                        if (~(0x0 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 < (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2 == 0)) {
                                            memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20 + 0xe0] = memory[0x180];
                                            if (~(0x0 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 < (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2 == 0)) {
                                                memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20 + 0x100] = memory[0x1a0];
                                                if (~(0x0 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 < (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2 == 0)) {
                                                    memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20 + 0x120] = memory[0x1c0];
                                                    if (~(0x0 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 < (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2 == 0)) {
                                                        memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20 + 0x140] = memory[0x1e0];
                                                    }
                                                    if (~((0x1f & (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) == 0)) {
                                                        memory[(0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2)] = ~(0x100 ** (0x20 - (0x1f & (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2)) - 0x1) & memory[(0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2)];
                                                        return memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20:(0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20+0x20 + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20)];
                                                    }
                                                    return memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20:(0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20+(0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20)];
                                                }
                                                if (~((0x1f & (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) == 0)) {
                                                    memory[(0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2)] = ~(0x100 ** (0x20 - (0x1f & (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2)) - 0x1) & memory[(0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2)];
                                                    return memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20:(0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20+0x20 + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20)];
                                                }
                                                return memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20:(0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20+(0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20)];
                                            }
                                            if (~((0x1f & (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) == 0)) {
                                                memory[(0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2)] = ~(0x100 ** (0x20 - (0x1f & (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2)) - 0x1) & memory[(0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2)];
                                                return memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20:(0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20+0x20 + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20)];
                                            }
                                            return memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20:(0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20+(0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20)];
                                        }
                                        if (~((0x1f & (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) == 0)) {
                                            memory[(0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2)] = ~(0x100 ** (0x20 - (0x1f & (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2)) - 0x1) & memory[(0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2)];
                                            return memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20:(0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20+0x20 + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20)];
                                        }
                                        return memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20:(0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20+(0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20)];
                                    }
                                    if (~((0x1f & (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) == 0)) {
                                        memory[(0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2)] = ~(0x100 ** (0x20 - (0x1f & (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2)) - 0x1) & memory[(0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2)];
                                        return memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20:(0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20+0x20 + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20)];
                                    }
                                    return memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20:(0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20+(0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20)];
                                }
                                if (~((0x1f & (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) == 0)) {
                                    memory[(0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2)] = ~(0x100 ** (0x20 - (0x1f & (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2)) - 0x1) & memory[(0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2)];
                                    return memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20:(0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20+0x20 + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20)];
                                }
                            }
                            if (~((0x1f & (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) == 0)) {
                                memory[(0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2)] = ~(0x100 ** (0x20 - (0x1f & (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2)) - 0x1) & memory[(0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2)];
                            }
                        }
                        if (~((0x1f & (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) == 0)) {
                            memory[(0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2)] = ~(0x100 ** (0x20 - (0x1f & (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2)) - 0x1) & memory[(0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2)];
                        }
                    }
                    if (~((0x1f & (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) == 0)) {
                        memory[(0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2)] = ~(0x100 ** (0x20 - (0x1f & (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2)) - 0x1) & memory[(0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2)];
                    }
                }
                if (~((0x1f & (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) == 0)) {
                    memory[(0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2)] = ~(0x100 ** (0x20 - (0x1f & (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2)) - 0x1) & memory[(0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2)];
                }
            }
            if (~((0x1f & (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) == 0)) {
                memory[(0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2)] = ~(0x100 ** (0x20 - (0x1f & (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2)) - 0x1) & memory[(0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2)];
            }
        }
        if (~(0x20 + 0x80 + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2 > 0x20 + 0x20 + 0x80)) {
            memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20] = 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20;
            memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20] = (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2;
        }
        if (~(0x20 + 0x80 + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2 > 0x20 + 0x20 + 0x20 + 0x80)) {
            memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20] = 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20;
            memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20] = (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2;
        }
        if (~(0x20 + 0x80 + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x80)) {
            memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20] = 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20;
            memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20] = (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2;
        }
        if (~(0x20 + 0x80 + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80)) {
            memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20] = 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20;
            memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20] = (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2;
        }
        if (~(0x20 + 0x80 + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80)) {
            memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20] = 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20;
            memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20] = (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2;
        }
        if (~(0x20 + 0x80 + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80)) {
            memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20] = 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20;
            memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20] = (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2;
        }
        if (~(0x20 + 0x80 + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80)) {
            memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20] = 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20;
            memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20] = (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2;
        }
        if (~(0x20 + 0x80 + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80)) {
            memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20] = 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20;
            memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20] = (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2;
        }
        if (~(0x20 + 0x80 + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80)) {
            memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20] = 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20;
            memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20] = (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2;
        }
        if (~(0x20 + 0x80 + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80)) {
            memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20] = 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20;
            memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2) / 0x20 * 0x20] = (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2;
        }
        if (~(0x20 + 0x80 + (0x100 * ((0x1 & storage[0x8]) == 0) - 0x1 & storage[0x8]) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80)) {
        }
    }
}

function setApprovalForAll(address _arg0, bool _arg1) public {
    require(msg.data.length - 0x4 >= 0x40);
    require(_arg0 != msg.sender, 0x8c379a000000000000000000000000000000000000000000000000000000000, memory[0xa0], memory[0xc0], memory[0xe0]);
    mapping7[_arg0] = (_arg1 == 0 == 0 == 0 == 0) * 0x100 ** 0x0 | ~(0xff * 0x100 ** 0x0) & mapping7[_arg0];
    emit ApprovalForAll(msg.sender, _arg0, _arg1);
    return;
}

function balanceOf(address _arg0) public returns (unknown) {
    require(msg.data.length - 0x4 >= 0x20);
    require(_arg0 != 0x0, 0x8c379a000000000000000000000000000000000000000000000000000000000, memory[0xa0], memory[0xc0], memory[0xe0], memory[0x100]);
    return storage[keccak256(_arg0, 0x2)];
}

function renounceOwnership() public {
    require(var1 == msg.sender, 0x8c379a000000000000000000000000000000000000000000000000000000000, memory[0xa0], memory[0xc0], memory[0xe0]);
    emit OwnershipTransferred(var1, 0x0);
    var1 = 0x0 | 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 & var1;
    return;
}

function 7869f32c() public returns (unknown) {
    require(msg.data.length - 0x4 >= 0x20);
    return mapping12[_arg0][2];
}

function 8cb5b56b() public returns (unknown) {
    require(msg.data.length - 0x4 >= 0x40);
    return mapping12[_arg0][1] == _arg1;
}

function setBaseURI(string _arg0) public {
    require(msg.data.length - 0x4 >= 0x20);
    require(_arg0 <= 0x100000000);
    require(0x4 + _arg0 + 0x20 <= 0x4 + msg.data.length - 0x4);
    require((msg.data[0x4 + _arg0] > 0x100000000 | 0x20 + 0x4 + _arg0 + msg.data[0x4 + _arg0] * 0x1 > 0x4 + msg.data.length - 0x4) == 0);
    memory[0xa0 + msg.data[0x4 + _arg0]] = 0x0;
    if (~((0xffffffffffffffffffffffffffffffffffffffff & 0xffffffffffffffffffffffffffffffffffffffff & var1 / 0x100 ** 0x0) == (0xffffffffffffffffffffffffffffffffffffffff & msg.sender))) {
        memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = 0x8c379a000000000000000000000000000000000000000000000000000000000;
        memory[0x4 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = 0x20 + 0x4 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x4 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20;
        memory[0x20 + 0x4 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = 0x20;
        memory[0x20 + 0x20 + 0x4 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;
        revert(memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20:(0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20+0x20 + 0x20 + 0x20 + 0x4 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20)]);
    }
    if (~(0x1f < msg.data[0x4 + _arg0])) {
        var2 = msg.data[0x4 + _arg0] + msg.data[0x4 + _arg0] | 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 & memory[0xa0];
        if (~(keccak256(0xa) + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 > keccak256(0xa) == 0)) {
            storage[keccak256(0xa)] = 0x0;
            if (~(keccak256(0xa) + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 > 0x1 + keccak256(0xa) == 0)) {
                storage[0x1 + keccak256(0xa)] = 0x0;
                if (~(keccak256(0xa) + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 > 0x1 + 0x1 + keccak256(0xa) == 0)) {
                    storage[0x1 + 0x1 + keccak256(0xa)] = 0x0;
                    if (~(keccak256(0xa) + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 > 0x1 + 0x1 + 0x1 + keccak256(0xa) == 0)) {
                        storage[0x1 + 0x1 + 0x1 + keccak256(0xa)] = 0x0;
                        if (~(keccak256(0xa) + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 > 0x1 + 0x1 + 0x1 + 0x1 + keccak256(0xa) == 0)) {
                            storage[0x1 + 0x1 + 0x1 + 0x1 + keccak256(0xa)] = 0x0;
                            if (~(keccak256(0xa) + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 > 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + keccak256(0xa) == 0)) {
                                storage[0x1 + 0x1 + 0x1 + 0x1 + 0x1 + keccak256(0xa)] = 0x0;
                                if (~(keccak256(0xa) + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 > 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + keccak256(0xa) == 0)) {
                                    storage[0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + keccak256(0xa)] = 0x0;
                                    if (~(keccak256(0xa) + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 > 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + keccak256(0xa) == 0)) {
                                        storage[0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + keccak256(0xa)] = 0x0;
                                        if (~(keccak256(0xa) + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 > 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + keccak256(0xa) == 0)) {
                                            storage[0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + keccak256(0xa)] = 0x0;
                                            if (~(keccak256(0xa) + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 > 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + keccak256(0xa) == 0)) {
                                                storage[0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + keccak256(0xa)] = 0x0;
                                                if (~(keccak256(0xa) + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 > 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + keccak256(0xa) == 0)) {
                                                    storage[0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + keccak256(0xa)] = 0x0;
                                                }
                                                memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20;
                                                memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = msg.data[0x4 + _arg0];
                                                if (~(0x0 < msg.data[0x4 + _arg0] == 0)) {
                                                    memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = memory[0xa0];
                                                    if (~(0x0 + 0x20 < msg.data[0x4 + _arg0] == 0)) {
                                                        memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 + 0x20] = memory[0xc0];
                                                        if (~(0x0 + 0x20 + 0x20 < msg.data[0x4 + _arg0] == 0)) {
                                                            memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 + 0x40] = memory[0xe0];
                                                            if (~(0x0 + 0x20 + 0x20 + 0x20 < msg.data[0x4 + _arg0] == 0)) {
                                                                memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 + 0x60] = memory[0x100];
                                                                if (~(0x0 + 0x20 + 0x20 + 0x20 + 0x20 < msg.data[0x4 + _arg0] == 0)) {
                                                                    memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 + 0x80] = memory[0x120];
                                                                    if (~(0x0 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 < msg.data[0x4 + _arg0] == 0)) {
                                                                        memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 + 0xa0] = memory[0x140];
                                                                        if (~(0x0 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 < msg.data[0x4 + _arg0] == 0)) {
                                                                            memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 + 0xc0] = memory[0x160];
                                                                            if (~(0x0 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 < msg.data[0x4 + _arg0] == 0)) {
                                                                                memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 + 0xe0] = memory[0x180];
                                                                                if (~(0x0 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 < msg.data[0x4 + _arg0] == 0)) {
                                                                                    memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 + 0x100] = memory[0x1a0];
                                                                                    if (~(0x0 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 < msg.data[0x4 + _arg0] == 0)) {
                                                                                        memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 + 0x120] = memory[0x1c0];
                                                                                        if (~(0x0 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 < msg.data[0x4 + _arg0] == 0)) {
                                                                                            memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 + 0x140] = memory[0x1e0];
                                                                                        }
                                                                                        if (~((0x1f & msg.data[0x4 + _arg0]) == 0)) {
                                                                                            memory[msg.data[0x4 + _arg0] + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg0])] = ~(0x100 ** (0x20 - (0x1f & msg.data[0x4 + _arg0])) - 0x1) & memory[msg.data[0x4 + _arg0] + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg0])];
                                                                                            log(0xa1e4fe82e2a65657cfd59fd66da1338be7d996f649643c161b7c24b1de80fca9, memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20:0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg0]) - 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 ]ii);
                                                                                            return;
                                                                                        }
                                                                                        log(0xa1e4fe82e2a65657cfd59fd66da1338be7d996f649643c161b7c24b1de80fca9, memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20:msg.data[0x4 + _arg0] + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 ]ii);
                                                                                        return;
                                                                                    }
                                                                                    if (~((0x1f & msg.data[0x4 + _arg0]) == 0)) {
                                                                                        memory[msg.data[0x4 + _arg0] + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg0])] = ~(0x100 ** (0x20 - (0x1f & msg.data[0x4 + _arg0])) - 0x1) & memory[msg.data[0x4 + _arg0] + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg0])];
                                                                                        log(0xa1e4fe82e2a65657cfd59fd66da1338be7d996f649643c161b7c24b1de80fca9, memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20:0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg0]) - 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 ]ii);
                                                                                        return;
                                                                                    }
                                                                                    log(0xa1e4fe82e2a65657cfd59fd66da1338be7d996f649643c161b7c24b1de80fca9, memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20:msg.data[0x4 + _arg0] + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 ]ii);
                                                                                    return;
                                                                                }
                                                                                if (~((0x1f & msg.data[0x4 + _arg0]) == 0)) {
                                                                                    memory[msg.data[0x4 + _arg0] + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg0])] = ~(0x100 ** (0x20 - (0x1f & msg.data[0x4 + _arg0])) - 0x1) & memory[msg.data[0x4 + _arg0] + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg0])];
                                                                                    log(0xa1e4fe82e2a65657cfd59fd66da1338be7d996f649643c161b7c24b1de80fca9, memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20:0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg0]) - 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 ]ii);
                                                                                    return;
                                                                                }
                                                                                log(0xa1e4fe82e2a65657cfd59fd66da1338be7d996f649643c161b7c24b1de80fca9, memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20:msg.data[0x4 + _arg0] + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 ]ii);
                                                                                return;
                                                                            }
                                                                            if (~((0x1f & msg.data[0x4 + _arg0]) == 0)) {
                                                                                memory[msg.data[0x4 + _arg0] + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg0])] = ~(0x100 ** (0x20 - (0x1f & msg.data[0x4 + _arg0])) - 0x1) & memory[msg.data[0x4 + _arg0] + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg0])];
                                                                                log(0xa1e4fe82e2a65657cfd59fd66da1338be7d996f649643c161b7c24b1de80fca9, memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20:0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg0]) - 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 ]ii);
                                                                                return;
                                                                            }
                                                                            log(0xa1e4fe82e2a65657cfd59fd66da1338be7d996f649643c161b7c24b1de80fca9, memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20:msg.data[0x4 + _arg0] + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 ]ii);
                                                                            return;
                                                                        }
                                                                        if (~((0x1f & msg.data[0x4 + _arg0]) == 0)) {
                                                                            memory[msg.data[0x4 + _arg0] + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg0])] = ~(0x100 ** (0x20 - (0x1f & msg.data[0x4 + _arg0])) - 0x1) & memory[msg.data[0x4 + _arg0] + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg0])];
                                                                            log(0xa1e4fe82e2a65657cfd59fd66da1338be7d996f649643c161b7c24b1de80fca9, memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20:0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg0]) - 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 ]ii);
                                                                            return;
                                                                        }
                                                                        log(0xa1e4fe82e2a65657cfd59fd66da1338be7d996f649643c161b7c24b1de80fca9, memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20:msg.data[0x4 + _arg0] + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 ]ii);
                                                                        return;
                                                                    }
                                                                    if (~((0x1f & msg.data[0x4 + _arg0]) == 0)) {
                                                                        memory[msg.data[0x4 + _arg0] + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg0])] = ~(0x100 ** (0x20 - (0x1f & msg.data[0x4 + _arg0])) - 0x1) & memory[msg.data[0x4 + _arg0] + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg0])];
                                                                        log(0xa1e4fe82e2a65657cfd59fd66da1338be7d996f649643c161b7c24b1de80fca9, memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20:0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg0]) - 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 ]ii);
                                                                        return;
                                                                    }
                                                                }
                                                                if (~((0x1f & msg.data[0x4 + _arg0]) == 0)) {
                                                                    memory[msg.data[0x4 + _arg0] + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg0])] = ~(0x100 ** (0x20 - (0x1f & msg.data[0x4 + _arg0])) - 0x1) & memory[msg.data[0x4 + _arg0] + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg0])];
                                                                }
                                                            }
                                                            if (~((0x1f & msg.data[0x4 + _arg0]) == 0)) {
                                                                memory[msg.data[0x4 + _arg0] + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg0])] = ~(0x100 ** (0x20 - (0x1f & msg.data[0x4 + _arg0])) - 0x1) & memory[msg.data[0x4 + _arg0] + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg0])];
                                                            }
                                                        }
                                                        if (~((0x1f & msg.data[0x4 + _arg0]) == 0)) {
                                                            memory[msg.data[0x4 + _arg0] + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg0])] = ~(0x100 ** (0x20 - (0x1f & msg.data[0x4 + _arg0])) - 0x1) & memory[msg.data[0x4 + _arg0] + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg0])];
                                                        }
                                                    }
                                                    if (~((0x1f & msg.data[0x4 + _arg0]) == 0)) {
                                                        memory[msg.data[0x4 + _arg0] + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg0])] = ~(0x100 ** (0x20 - (0x1f & msg.data[0x4 + _arg0])) - 0x1) & memory[msg.data[0x4 + _arg0] + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg0])];
                                                    }
                                                }
                                                if (~((0x1f & msg.data[0x4 + _arg0]) == 0)) {
                                                    memory[msg.data[0x4 + _arg0] + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg0])] = ~(0x100 ** (0x20 - (0x1f & msg.data[0x4 + _arg0])) - 0x1) & memory[msg.data[0x4 + _arg0] + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - (0x1f & msg.data[0x4 + _arg0])];
                                                }
                                            }
                                            memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20;
                                            memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = msg.data[0x4 + _arg0];
                                        }
                                        memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20;
                                        memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = msg.data[0x4 + _arg0];
                                    }
                                    memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20;
                                    memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = msg.data[0x4 + _arg0];
                                }
                                memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20;
                                memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = msg.data[0x4 + _arg0];
                            }
                            memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20;
                            memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = msg.data[0x4 + _arg0];
                        }
                        memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20;
                        memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = msg.data[0x4 + _arg0];
                    }
                    memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20;
                    memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = msg.data[0x4 + _arg0];
                }
                memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20;
                memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = msg.data[0x4 + _arg0];
            }
            memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20;
            memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = msg.data[0x4 + _arg0];
        }
        memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20;
        memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = msg.data[0x4 + _arg0];
    }
    var2 = 0x1 + msg.data[0x4 + _arg0] + msg.data[0x4 + _arg0];
    if (~(msg.data[0x4 + _arg0] == 0)) {
        if (~(0x20 + 0x80 + msg.data[0x4 + _arg0] > 0x20 + 0x80 == 0)) {
            storage[keccak256(0xa)] = memory[0xa0];
            if (~(0x20 + 0x80 + msg.data[0x4 + _arg0] > 0x20 + 0x20 + 0x80 == 0)) {
                storage[0x1 + keccak256(0xa)] = memory[0xc0];
                if (~(0x20 + 0x80 + msg.data[0x4 + _arg0] > 0x20 + 0x20 + 0x20 + 0x80 == 0)) {
                    storage[0x1 + 0x1 + keccak256(0xa)] = memory[0xe0];
                    if (~(0x20 + 0x80 + msg.data[0x4 + _arg0] > 0x20 + 0x20 + 0x20 + 0x20 + 0x80 == 0)) {
                        storage[0x1 + 0x1 + 0x1 + keccak256(0xa)] = memory[0x100];
                        if (~(0x20 + 0x80 + msg.data[0x4 + _arg0] > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80 == 0)) {
                            storage[0x1 + 0x1 + 0x1 + 0x1 + keccak256(0xa)] = memory[0x120];
                            if (~(0x20 + 0x80 + msg.data[0x4 + _arg0] > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80 == 0)) {
                                storage[0x1 + 0x1 + 0x1 + 0x1 + 0x1 + keccak256(0xa)] = memory[0x140];
                                if (~(0x20 + 0x80 + msg.data[0x4 + _arg0] > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80 == 0)) {
                                    storage[0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + keccak256(0xa)] = memory[0x160];
                                    if (~(0x20 + 0x80 + msg.data[0x4 + _arg0] > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80 == 0)) {
                                        storage[0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + keccak256(0xa)] = memory[0x180];
                                        if (~(0x20 + 0x80 + msg.data[0x4 + _arg0] > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80 == 0)) {
                                            storage[0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + keccak256(0xa)] = memory[0x1a0];
                                            if (~(0x20 + 0x80 + msg.data[0x4 + _arg0] > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80 == 0)) {
                                                storage[0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + keccak256(0xa)] = memory[0x1c0];
                                                if (~(0x20 + 0x80 + msg.data[0x4 + _arg0] > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80 == 0)) {
                                                    storage[0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + 0x1 + keccak256(0xa)] = memory[0x1e0];
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

function ownerOf(uint256 _arg0) public returns (unknown) {
    require(msg.data.length - 0x4 >= 0x20);
    if (~(mapping5[_arg0 << 0x0] != 0x0)) {
    }
    if (~(mapping5[_arg0 << 0x0] - 0x1 < storage[0x0 + 0x0 + 0x3])) {
        revert('Invalid instruction (0xfe)');
    }
    return storage[0x1 + 0x2 * (mapping5[_arg0 << 0x0] - 0x1) + keccak256(0x3)] >>> 0x0;
}

function baseURI() public {
    if (~((0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 == 0)) {
        if (~(0x1f < (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2)) {
            memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20] = 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20;
            memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20] = (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2;
            if (~(0x0 < (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 == 0)) {
                memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20] = var2 / 0x100 * 0x100;
                if (~(0x0 + 0x20 < (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 == 0)) {
                    memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20 + 0x20] = memory[0xc0];
                    if (~(0x0 + 0x20 + 0x20 < (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 == 0)) {
                        memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20 + 0x40] = memory[0xe0];
                        if (~(0x0 + 0x20 + 0x20 + 0x20 < (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 == 0)) {
                            memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20 + 0x60] = memory[0x100];
                            if (~(0x0 + 0x20 + 0x20 + 0x20 + 0x20 < (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 == 0)) {
                                memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20 + 0x80] = memory[0x120];
                                if (~(0x0 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 < (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 == 0)) {
                                    memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20 + 0xa0] = memory[0x140];
                                    if (~(0x0 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 < (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 == 0)) {
                                        memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20 + 0xc0] = memory[0x160];
                                        if (~(0x0 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 < (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 == 0)) {
                                            memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20 + 0xe0] = memory[0x180];
                                            if (~(0x0 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 < (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 == 0)) {
                                                memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20 + 0x100] = memory[0x1a0];
                                                if (~(0x0 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 < (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 == 0)) {
                                                    memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20 + 0x120] = memory[0x1c0];
                                                    if (~(0x0 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 < (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 == 0)) {
                                                        memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20 + 0x140] = memory[0x1e0];
                                                    }
                                                    if (~((0x1f & (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) == 0)) {
                                                        memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2)] = ~(0x100 ** (0x20 - (0x1f & (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2)) - 0x1) & memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2)];
                                                        return memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20:(0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20+0x20 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20)];
                                                    }
                                                    return memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20:(0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20+(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20)];
                                                }
                                                if (~((0x1f & (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) == 0)) {
                                                    memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2)] = ~(0x100 ** (0x20 - (0x1f & (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2)) - 0x1) & memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2)];
                                                    return memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20:(0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20+0x20 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20)];
                                                }
                                                return memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20:(0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20+(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20)];
                                            }
                                            if (~((0x1f & (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) == 0)) {
                                                memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2)] = ~(0x100 ** (0x20 - (0x1f & (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2)) - 0x1) & memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2)];
                                                return memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20:(0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20+0x20 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20)];
                                            }
                                            return memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20:(0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20+(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20)];
                                        }
                                        if (~((0x1f & (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) == 0)) {
                                            memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2)] = ~(0x100 ** (0x20 - (0x1f & (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2)) - 0x1) & memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2)];
                                            return memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20:(0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20+0x20 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20)];
                                        }
                                        return memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20:(0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20+(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20)];
                                    }
                                    if (~((0x1f & (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) == 0)) {
                                        memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2)] = ~(0x100 ** (0x20 - (0x1f & (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2)) - 0x1) & memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2)];
                                        return memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20:(0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20+0x20 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20)];
                                    }
                                    return memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20:(0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20+(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20)];
                                }
                                if (~((0x1f & (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) == 0)) {
                                    memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2)] = ~(0x100 ** (0x20 - (0x1f & (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2)) - 0x1) & memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2)];
                                    return memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20:(0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20+0x20 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20)];
                                }
                            }
                            if (~((0x1f & (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) == 0)) {
                                memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2)] = ~(0x100 ** (0x20 - (0x1f & (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2)) - 0x1) & memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2)];
                            }
                        }
                        if (~((0x1f & (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) == 0)) {
                            memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2)] = ~(0x100 ** (0x20 - (0x1f & (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2)) - 0x1) & memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2)];
                        }
                    }
                    if (~((0x1f & (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) == 0)) {
                        memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2)] = ~(0x100 ** (0x20 - (0x1f & (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2)) - 0x1) & memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2)];
                    }
                }
                if (~((0x1f & (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) == 0)) {
                    memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2)] = ~(0x100 ** (0x20 - (0x1f & (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2)) - 0x1) & memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2)];
                }
            }
            if (~((0x1f & (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) == 0)) {
                memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2)] = ~(0x100 ** (0x20 - (0x1f & (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2)) - 0x1) & memory[(0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2)];
            }
        }
        if (~(0x20 + 0x80 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 > 0x20 + 0x20 + 0x80)) {
            memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20] = 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20;
            memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20] = (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2;
        }
        if (~(0x20 + 0x80 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 > 0x20 + 0x20 + 0x20 + 0x80)) {
            memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20] = 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20;
            memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20] = (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2;
        }
        if (~(0x20 + 0x80 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x80)) {
            memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20] = 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20;
            memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20] = (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2;
        }
        if (~(0x20 + 0x80 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80)) {
            memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20] = 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20;
            memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20] = (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2;
        }
        if (~(0x20 + 0x80 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80)) {
            memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20] = 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20;
            memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20] = (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2;
        }
        if (~(0x20 + 0x80 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80)) {
            memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20] = 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20;
            memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20] = (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2;
        }
        if (~(0x20 + 0x80 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80)) {
            memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20] = 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20;
            memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20] = (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2;
        }
        if (~(0x20 + 0x80 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80)) {
            memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20] = 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20;
            memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20] = (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2;
        }
        if (~(0x20 + 0x80 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80)) {
            memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20] = 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20;
            memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20] = (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2;
        }
        if (~(0x20 + 0x80 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80)) {
            memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20] = 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20;
            memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2) / 0x20 * 0x20] = (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2;
        }
        if (~(0x20 + 0x80 + (0x100 * ((0x1 & var2) == 0) - 0x1 & var2) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80)) {
        }
    }
}

function safeTransferFrom(address _arg0, address _arg1, uint256 _arg2) public {
    require(msg.data.length - 0x4 >= 0x60);
    require(mapping5[_arg2 << 0x0] != 0x0, 0x8c379a000000000000000000000000000000000000000000000000000000000, memory[0xc0], memory[0xe0], memory[0x100], memory[0x120]);
    if (~(mapping5[_arg2 << 0x0] != 0x0)) {
    }
    if (~(mapping5[_arg2 << 0x0] - 0x1 < storage[0x0 + 0x0 + 0x3])) {
        revert('Invalid instruction (0xfe)');
    }
    if (~((0xffffffffffffffffffffffffffffffffffffffff & msg.sender) == (0xffffffffffffffffffffffffffffffffffffffff & storage[0x1 + 0x2 * (mapping5[_arg2 << 0x0] - 0x1) + keccak256(0x3)] >>> 0x0))) {
        require(mapping5[_arg2 << 0x0] != 0x0, 0x8c379a000000000000000000000000000000000000000000000000000000000, memory[0x120], memory[0x140], memory[0x160], memory[0x180]);
        if (~((0xffffffffffffffffffffffffffffffffffffffff & 0xffffffffffffffffffffffffffffffffffffffff & mapping6[_arg2] / 0x100 ** 0x0) == (0xffffffffffffffffffffffffffffffffffffffff & msg.sender))) {
            require(mapping7[msg.sender], 0x8c379a000000000000000000000000000000000000000000000000000000000, memory[0x120], memory[0x140], memory[0x160], memory[0x180]);
        }
        require(mapping6[_arg2] == msg.sender, 0x8c379a000000000000000000000000000000000000000000000000000000000, memory[0x120], memory[0x140], memory[0x160], memory[0x180]);
    }
    if (~((0xffffffffffffffffffffffffffffffffffffffff & msg.sender) == (0xffffffffffffffffffffffffffffffffffffffff & storage[0x1 + 0x2 * (mapping5[_arg2 << 0x0] - 0x1) + keccak256(0x3)] >>> 0x0))) {
        require(mapping7[msg.sender], 0x8c379a000000000000000000000000000000000000000000000000000000000, memory[0x120], memory[0x140], memory[0x160], memory[0x180]);
    }
    require(msg.sender == storage[0x1 + 0x2 * (mapping5[_arg2 << 0x0] - 0x1) + keccak256(0x3)] >>> 0x0, 0x8c379a000000000000000000000000000000000000000000000000000000000, memory[0x120], memory[0x140], memory[0x160], memory[0x180]);
}

function 4f64f049() public {
    require(msg.data.length - 0x4 >= 0x20);
    require(_arg0 <= 0x100000000);
    require(0x4 + _arg0 + 0x20 <= 0x4 + msg.data.length - 0x4);
    require((msg.data[0x4 + _arg0] > 0x100000000 | 0x20 + 0x4 + _arg0 + msg.data[0x4 + _arg0] * 0x1 > 0x4 + msg.data.length - 0x4) == 0);
    memory[0xa0 + msg.data[0x4 + _arg0]] = 0x0;
    if (~(msg.data[0x4 + _arg0] < 0x20)) {
        memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = memory[0xa0];
        if (~(msg.data[0x4 + _arg0] - 0x20 < 0x20)) {
            memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 + 0x20] = memory[0xc0];
            if (~(msg.data[0x4 + _arg0] - 0x20 - 0x20 < 0x20)) {
                memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 + 0x20 + 0x20] = memory[0xe0];
                if (~(msg.data[0x4 + _arg0] - 0x20 - 0x20 - 0x20 < 0x20)) {
                    memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20] = memory[0x100];
                    if (~(msg.data[0x4 + _arg0] - 0x20 - 0x20 - 0x20 - 0x20 < 0x20)) {
                        memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20] = memory[0x120];
                        if (~(msg.data[0x4 + _arg0] - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 < 0x20)) {
                            memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] = memory[0x140];
                            if (~(msg.data[0x4 + _arg0] - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 < 0x20)) {
                                memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] = memory[0x160];
                                if (~(msg.data[0x4 + _arg0] - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 < 0x20)) {
                                    memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] = memory[0x180];
                                    if (~(msg.data[0x4 + _arg0] - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 < 0x20)) {
                                        memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] = memory[0x1a0];
                                        if (~(msg.data[0x4 + _arg0] - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 < 0x20)) {
                                            memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] = memory[0x1c0];
                                            if (~(msg.data[0x4 + _arg0] - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 < 0x20)) {
                                                memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] = memory[0x1e0];
                                            }
                                            memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] = memory[0x1e0] & ~(0x100 ** (0x20 - msg.data[0x4 + _arg0] - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20) - 0x1) | memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] & 0x100 ** (0x20 - msg.data[0x4 + _arg0] - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20) - 0x1;
                                            memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x20;
                                            memory[0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000;
                                            memory[0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = keccak256(memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20:(0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20+memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20])]);
                                            memory[msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = 0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x20;
                                            memory[0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = keccak256(memory[0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20:(0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20+memory[msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20])]);
                                            return memory[0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20:(0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20+0x20 + 0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20)];
                                        }
                                        memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] = memory[0x1c0] & ~(0x100 ** (0x20 - msg.data[0x4 + _arg0] - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20) - 0x1) | memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] & 0x100 ** (0x20 - msg.data[0x4 + _arg0] - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20) - 0x1;
                                        memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x20;
                                        memory[0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000;
                                        memory[0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = keccak256(memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20:(0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20+memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20])]);
                                        memory[msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = 0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x20;
                                        memory[0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = keccak256(memory[0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20:(0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20+memory[msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20])]);
                                        return memory[0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20:(0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20+0x20 + 0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20)];
                                    }
                                    memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] = memory[0x1a0] & ~(0x100 ** (0x20 - msg.data[0x4 + _arg0] - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20) - 0x1) | memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] & 0x100 ** (0x20 - msg.data[0x4 + _arg0] - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20) - 0x1;
                                    memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x20;
                                    memory[0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000;
                                    memory[0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = keccak256(memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20:(0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20+memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20])]);
                                    memory[msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = 0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x20;
                                    memory[0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = keccak256(memory[0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20:(0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20+memory[msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20])]);
                                    return memory[0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20:(0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20+0x20 + 0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20)];
                                }
                                memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] = memory[0x180] & ~(0x100 ** (0x20 - msg.data[0x4 + _arg0] - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20) - 0x1) | memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] & 0x100 ** (0x20 - msg.data[0x4 + _arg0] - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20) - 0x1;
                                memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x20;
                                memory[0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000;
                                memory[0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = keccak256(memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20:(0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20+memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20])]);
                                memory[msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = 0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x20;
                                memory[0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = keccak256(memory[0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20:(0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20+memory[msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20])]);
                                return memory[0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20:(0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20+0x20 + 0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20)];
                            }
                            memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] = memory[0x160] & ~(0x100 ** (0x20 - msg.data[0x4 + _arg0] - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20) - 0x1) | memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] & 0x100 ** (0x20 - msg.data[0x4 + _arg0] - 0x20 - 0x20 - 0x20 - 0x20 - 0x20 - 0x20) - 0x1;
                            memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x20;
                            memory[0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000;
                            memory[0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = keccak256(memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20:(0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20+memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20])]);
                            memory[msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = 0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x20;
                            memory[0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = keccak256(memory[0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20:(0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20+memory[msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20])]);
                            return memory[0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20:(0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20+0x20 + 0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20)];
                        }
                        memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] = memory[0x140] & ~(0x100 ** (0x20 - msg.data[0x4 + _arg0] - 0x20 - 0x20 - 0x20 - 0x20 - 0x20) - 0x1) | memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20] & 0x100 ** (0x20 - msg.data[0x4 + _arg0] - 0x20 - 0x20 - 0x20 - 0x20 - 0x20) - 0x1;
                        memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x20;
                        memory[0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000;
                        memory[0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = keccak256(memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20:(0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20+memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20])]);
                        memory[msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = 0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x20;
                        memory[0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = keccak256(memory[0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20:(0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20+memory[msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20])]);
                        return memory[0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20:(0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20+0x20 + 0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20)];
                    }
                    memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20] = memory[0x120] & ~(0x100 ** (0x20 - msg.data[0x4 + _arg0] - 0x20 - 0x20 - 0x20 - 0x20) - 0x1) | memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20 + 0x20] & 0x100 ** (0x20 - msg.data[0x4 + _arg0] - 0x20 - 0x20 - 0x20 - 0x20) - 0x1;
                    memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x20;
                    memory[0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000;
                    memory[0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = keccak256(memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20:(0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20+memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20])]);
                    memory[msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = 0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x20;
                    memory[0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = keccak256(memory[0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20:(0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20+memory[msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20])]);
                    return memory[0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20:(0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20+0x20 + 0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20)];
                }
                memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20] = memory[0x100] & ~(0x100 ** (0x20 - msg.data[0x4 + _arg0] - 0x20 - 0x20 - 0x20) - 0x1) | memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 + 0x20 + 0x20 + 0x20] & 0x100 ** (0x20 - msg.data[0x4 + _arg0] - 0x20 - 0x20 - 0x20) - 0x1;
                memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x20;
                memory[0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000;
                memory[0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = keccak256(memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20:(0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20+memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20])]);
                memory[msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = 0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x20;
                memory[0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = keccak256(memory[0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20:(0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20+memory[msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20])]);
                return memory[0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20:(0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20+0x20 + 0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20)];
            }
            memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 + 0x20 + 0x20] = memory[0xe0] & ~(0x100 ** (0x20 - msg.data[0x4 + _arg0] - 0x20 - 0x20) - 0x1) | memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 + 0x20 + 0x20] & 0x100 ** (0x20 - msg.data[0x4 + _arg0] - 0x20 - 0x20) - 0x1;
            memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x20;
            memory[0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000;
            memory[0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = keccak256(memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20:(0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20+memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20])]);
            memory[msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = 0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x20;
            memory[0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = keccak256(memory[0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20:(0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20+memory[msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20])]);
            return memory[0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20:(0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20+0x20 + 0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20)];
        }
        memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 + 0x20] = memory[0xc0] & ~(0x100 ** (0x20 - msg.data[0x4 + _arg0] - 0x20) - 0x1) | memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 + 0x20] & 0x100 ** (0x20 - msg.data[0x4 + _arg0] - 0x20) - 0x1;
        memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x20;
        memory[0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000;
        memory[0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = keccak256(memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20:(0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20+memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20])]);
        memory[msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = 0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x20;
        memory[0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = keccak256(memory[0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20:(0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20+memory[msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20])]);
        return memory[0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20:(0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20+0x20 + 0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20)];
    }
    memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = memory[0xa0] & ~(0x100 ** (0x20 - msg.data[0x4 + _arg0]) - 0x1) | memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] & 0x100 ** (0x20 - msg.data[0x4 + _arg0]) - 0x1;
    memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x20;
    memory[0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000;
    memory[0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = keccak256(memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20:(0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20+memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20])]);
    memory[msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = 0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x20;
    memory[0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = keccak256(memory[0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20:(0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20+memory[msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20])]);
    return memory[0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20:(0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20+0x20 + 0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 - 0x20 + 0x1c + 0x20 + msg.data[0x4 + _arg0] + 0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20)];
}

function tokenByIndex(uint256 _arg0) public returns (unknown) {
    require(msg.data.length - 0x4 >= 0x20);
    require(storage[0x3] > _arg0, 0x8c379a000000000000000000000000000000000000000000000000000000000, memory[0xa0], memory[0xc0], memory[0xe0], memory[0x100]);
    if (~(_arg0 < storage[0x0 + 0x0 + 0x3])) {
        revert('Invalid instruction (0xfe)');
    }
    return storage[0x2 * _arg0 + keccak256(0x3)] >>> 0x0;
}

function 53ed8765() public {
    require(msg.data.length - 0x4 >= 0x20);
    if (~((0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2 == 0)) {
        if (~(0x1f < (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2)) {
            memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20] = mapping12[_arg0][1];
            memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20] = mapping12[_arg0][2];
            memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20] = 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20;
            memory[0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20] = (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2;
            if (~(0x0 < (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2 == 0)) {
                memory[0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20] = mapping12[_arg0] / 0x100 * 0x100;
                if (~(0x0 + 0x20 < (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2 == 0)) {
                    memory[0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20 + 0x20] = memory[0xc0];
                    if (~(0x0 + 0x20 + 0x20 < (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2 == 0)) {
                        memory[0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20 + 0x40] = memory[0xe0];
                        if (~(0x0 + 0x20 + 0x20 + 0x20 < (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2 == 0)) {
                            memory[0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20 + 0x60] = memory[0x100];
                            if (~(0x0 + 0x20 + 0x20 + 0x20 + 0x20 < (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2 == 0)) {
                                memory[0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20 + 0x80] = memory[0x120];
                                if (~(0x0 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 < (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2 == 0)) {
                                    memory[0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20 + 0xa0] = memory[0x140];
                                    if (~(0x0 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 < (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2 == 0)) {
                                        memory[0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20 + 0xc0] = memory[0x160];
                                        if (~(0x0 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 < (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2 == 0)) {
                                            memory[0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20 + 0xe0] = memory[0x180];
                                            if (~(0x0 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 < (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2 == 0)) {
                                                memory[0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20 + 0x100] = memory[0x1a0];
                                                if (~(0x0 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 < (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2 == 0)) {
                                                    memory[0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20 + 0x120] = memory[0x1c0];
                                                    if (~(0x0 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 < (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2 == 0)) {
                                                        memory[0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20 + 0x140] = memory[0x1e0];
                                                    }
                                                    if (~((0x1f & (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) == 0)) {
                                                        memory[(0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2)] = ~(0x100 ** (0x20 - (0x1f & (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2)) - 0x1) & memory[(0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2)];
                                                        return memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20:(0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20+0x20 + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20)];
                                                    }
                                                    return memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20:(0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20+(0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20)];
                                                }
                                                if (~((0x1f & (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) == 0)) {
                                                    memory[(0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2)] = ~(0x100 ** (0x20 - (0x1f & (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2)) - 0x1) & memory[(0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2)];
                                                    return memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20:(0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20+0x20 + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20)];
                                                }
                                                return memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20:(0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20+(0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20)];
                                            }
                                            if (~((0x1f & (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) == 0)) {
                                                memory[(0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2)] = ~(0x100 ** (0x20 - (0x1f & (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2)) - 0x1) & memory[(0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2)];
                                                return memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20:(0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20+0x20 + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20)];
                                            }
                                            return memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20:(0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20+(0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20)];
                                        }
                                        if (~((0x1f & (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) == 0)) {
                                            memory[(0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2)] = ~(0x100 ** (0x20 - (0x1f & (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2)) - 0x1) & memory[(0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2)];
                                            return memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20:(0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20+0x20 + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20)];
                                        }
                                        return memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20:(0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20+(0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20)];
                                    }
                                    if (~((0x1f & (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) == 0)) {
                                        memory[(0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2)] = ~(0x100 ** (0x20 - (0x1f & (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2)) - 0x1) & memory[(0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2)];
                                        return memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20:(0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20+0x20 + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20)];
                                    }
                                    return memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20:(0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20+(0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20)];
                                }
                                if (~((0x1f & (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) == 0)) {
                                    memory[(0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2)] = ~(0x100 ** (0x20 - (0x1f & (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2)) - 0x1) & memory[(0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2)];
                                    return memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20:(0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20+0x20 + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20)];
                                }
                            }
                            if (~((0x1f & (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) == 0)) {
                                memory[(0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2)] = ~(0x100 ** (0x20 - (0x1f & (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2)) - 0x1) & memory[(0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2)];
                            }
                        }
                        if (~((0x1f & (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) == 0)) {
                            memory[(0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2)] = ~(0x100 ** (0x20 - (0x1f & (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2)) - 0x1) & memory[(0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2)];
                        }
                    }
                    if (~((0x1f & (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) == 0)) {
                        memory[(0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2)] = ~(0x100 ** (0x20 - (0x1f & (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2)) - 0x1) & memory[(0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2)];
                    }
                }
                if (~((0x1f & (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) == 0)) {
                    memory[(0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2)] = ~(0x100 ** (0x20 - (0x1f & (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2)) - 0x1) & memory[(0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2)];
                }
            }
            if (~((0x1f & (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) == 0)) {
                memory[(0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2)] = ~(0x100 ** (0x20 - (0x1f & (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2)) - 0x1) & memory[(0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2)];
            }
        }
        if (~(0x20 + 0x80 + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2 > 0x20 + 0x20 + 0x80)) {
            memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20] = mapping12[_arg0][1];
            memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20] = mapping12[_arg0][2];
            memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20] = 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20;
            memory[0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20] = (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2;
        }
        if (~(0x20 + 0x80 + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2 > 0x20 + 0x20 + 0x20 + 0x80)) {
            memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20] = mapping12[_arg0][1];
            memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20] = mapping12[_arg0][2];
            memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20] = 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20;
            memory[0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20] = (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2;
        }
        if (~(0x20 + 0x80 + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x80)) {
            memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20] = mapping12[_arg0][1];
            memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20] = mapping12[_arg0][2];
            memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20] = 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20;
            memory[0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20] = (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2;
        }
        if (~(0x20 + 0x80 + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80)) {
            memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20] = mapping12[_arg0][1];
            memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20] = mapping12[_arg0][2];
            memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20] = 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20;
            memory[0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20] = (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2;
        }
        if (~(0x20 + 0x80 + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80)) {
            memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20] = mapping12[_arg0][1];
            memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20] = mapping12[_arg0][2];
            memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20] = 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20;
            memory[0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20] = (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2;
        }
        if (~(0x20 + 0x80 + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80)) {
            memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20] = mapping12[_arg0][1];
            memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20] = mapping12[_arg0][2];
            memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20] = 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20;
            memory[0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20] = (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2;
        }
        if (~(0x20 + 0x80 + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80)) {
            memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20] = mapping12[_arg0][1];
            memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20] = mapping12[_arg0][2];
            memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20] = 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20;
            memory[0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20] = (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2;
        }
        if (~(0x20 + 0x80 + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80)) {
            memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20] = mapping12[_arg0][1];
            memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20] = mapping12[_arg0][2];
            memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20] = 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20;
            memory[0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20] = (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2;
        }
        if (~(0x20 + 0x80 + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80)) {
            memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20] = mapping12[_arg0][1];
            memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20] = mapping12[_arg0][2];
            memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20] = 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20;
            memory[0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20] = (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2;
        }
        if (~(0x20 + 0x80 + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80)) {
            memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20] = mapping12[_arg0][1];
            memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20] = mapping12[_arg0][2];
            memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20] = 0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20;
            memory[0x20 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2) / 0x20 * 0x20] = (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2;
        }
        if (~(0x20 + 0x80 + (0x100 * ((0x1 & mapping12[_arg0]) == 0) - 0x1 & mapping12[_arg0]) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80)) {
        }
    }
}

function create(string _arg0, string _arg1) public {
    require(msg.data.length - 0x4 >= 0x40);
    require(_arg0 <= 0x100000000);
    require(0x4 + _arg0 + 0x20 <= 0x4 + msg.data.length - 0x4);
    require((msg.data[0x4 + _arg0] > 0x100000000 | 0x20 + 0x4 + _arg0 + msg.data[0x4 + _arg0] * 0x1 > 0x4 + msg.data.length - 0x4) == 0);
    require(_arg1 <= 0x100000000);
    require(0x4 + _arg1 + 0x20 <= 0x4 + msg.data.length - 0x4);
    require((msg.data[0x4 + _arg1] > 0x100000000 | 0x20 + 0x4 + _arg1 + msg.data[0x4 + _arg1] * 0x1 > 0x4 + msg.data.length - 0x4) == 0);
    memory[0xa0 + msg.data[0x4 + _arg0]] = 0x0;
    memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20] = msg.data[0x4 + _arg1];
    memory[0x20 + 0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 + msg.data[0x4 + _arg1]] = 0x0;
    memory[0x80 + 0x20 + (0x1f + msg.data[0x4 + _arg0]) / 0x20 * 0x20 + 0x20 + (0x1f + msg.data[0x4 + _arg1]) / 0x20 * 0x20] = 0x80;
}

function transferFrom(address _arg0, address _arg1, uint256 _arg2) public {
    require(msg.data.length - 0x4 >= 0x60);
    require(mapping5[_arg2 << 0x0] != 0x0, 0x8c379a000000000000000000000000000000000000000000000000000000000, memory[0xa0], memory[0xc0], memory[0xe0], memory[0x100]);
}

function tokenOfOwnerByIndex(address _arg0, uint256 _arg1) public returns (unknown) {
    require(msg.data.length - 0x4 >= 0x40);
    require(storage[keccak256(_arg0, 0x2)] > _arg1, 0x8c379a000000000000000000000000000000000000000000000000000000000, memory[0xa0], memory[0xc0], memory[0xe0], memory[0x100]);
    if (~(_arg1 < storage[0x0 + 0x0 + keccak256(_arg0, 0x2)])) {
        revert('Invalid instruction (0xfe)');
    }
    return storage[keccak256(keccak256(_arg0, 0x2)) + _arg1] >>> 0x0;
}

function supportsInterface(bytes4 _arg0) public returns (unknown) {
    require(msg.data.length - 0x4 >= 0x20);
    return mapping2[0xffffffff00000000000000000000000000000000000000000000000000000000 & _arg0];
}

function name() public {
    if (~((0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2 == 0)) {
        if (~(0x1f < (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2)) {
            memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20] = 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20;
            memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20] = (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2;
            if (~(0x0 < (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2 == 0)) {
                memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20] = storage[0x7] / 0x100 * 0x100;
                if (~(0x0 + 0x20 < (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2 == 0)) {
                    memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20 + 0x20] = memory[0xc0];
                    if (~(0x0 + 0x20 + 0x20 < (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2 == 0)) {
                        memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20 + 0x40] = memory[0xe0];
                        if (~(0x0 + 0x20 + 0x20 + 0x20 < (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2 == 0)) {
                            memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20 + 0x60] = memory[0x100];
                            if (~(0x0 + 0x20 + 0x20 + 0x20 + 0x20 < (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2 == 0)) {
                                memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20 + 0x80] = memory[0x120];
                                if (~(0x0 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 < (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2 == 0)) {
                                    memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20 + 0xa0] = memory[0x140];
                                    if (~(0x0 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 < (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2 == 0)) {
                                        memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20 + 0xc0] = memory[0x160];
                                        if (~(0x0 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 < (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2 == 0)) {
                                            memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20 + 0xe0] = memory[0x180];
                                            if (~(0x0 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 < (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2 == 0)) {
                                                memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20 + 0x100] = memory[0x1a0];
                                                if (~(0x0 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 < (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2 == 0)) {
                                                    memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20 + 0x120] = memory[0x1c0];
                                                    if (~(0x0 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 < (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2 == 0)) {
                                                        memory[0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20 + 0x140] = memory[0x1e0];
                                                    }
                                                    if (~((0x1f & (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) == 0)) {
                                                        memory[(0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2)] = ~(0x100 ** (0x20 - (0x1f & (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2)) - 0x1) & memory[(0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2)];
                                                        return memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20:(0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20+0x20 + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20)];
                                                    }
                                                    return memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20:(0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20+(0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20)];
                                                }
                                                if (~((0x1f & (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) == 0)) {
                                                    memory[(0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2)] = ~(0x100 ** (0x20 - (0x1f & (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2)) - 0x1) & memory[(0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2)];
                                                    return memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20:(0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20+0x20 + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20)];
                                                }
                                                return memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20:(0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20+(0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20)];
                                            }
                                            if (~((0x1f & (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) == 0)) {
                                                memory[(0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2)] = ~(0x100 ** (0x20 - (0x1f & (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2)) - 0x1) & memory[(0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2)];
                                                return memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20:(0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20+0x20 + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20)];
                                            }
                                            return memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20:(0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20+(0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20)];
                                        }
                                        if (~((0x1f & (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) == 0)) {
                                            memory[(0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2)] = ~(0x100 ** (0x20 - (0x1f & (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2)) - 0x1) & memory[(0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2)];
                                            return memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20:(0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20+0x20 + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20)];
                                        }
                                        return memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20:(0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20+(0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20)];
                                    }
                                    if (~((0x1f & (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) == 0)) {
                                        memory[(0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2)] = ~(0x100 ** (0x20 - (0x1f & (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2)) - 0x1) & memory[(0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2)];
                                        return memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20:(0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20+0x20 + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20)];
                                    }
                                    return memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20:(0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20+(0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20)];
                                }
                                if (~((0x1f & (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) == 0)) {
                                    memory[(0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2)] = ~(0x100 ** (0x20 - (0x1f & (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2)) - 0x1) & memory[(0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2)];
                                    return memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20:(0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20+0x20 + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20)];
                                }
                            }
                            if (~((0x1f & (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) == 0)) {
                                memory[(0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2)] = ~(0x100 ** (0x20 - (0x1f & (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2)) - 0x1) & memory[(0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2)];
                            }
                        }
                        if (~((0x1f & (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) == 0)) {
                            memory[(0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2)] = ~(0x100 ** (0x20 - (0x1f & (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2)) - 0x1) & memory[(0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2)];
                        }
                    }
                    if (~((0x1f & (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) == 0)) {
                        memory[(0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2)] = ~(0x100 ** (0x20 - (0x1f & (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2)) - 0x1) & memory[(0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2)];
                    }
                }
                if (~((0x1f & (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) == 0)) {
                    memory[(0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2)] = ~(0x100 ** (0x20 - (0x1f & (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2)) - 0x1) & memory[(0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2)];
                }
            }
            if (~((0x1f & (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) == 0)) {
                memory[(0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2)] = ~(0x100 ** (0x20 - (0x1f & (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2)) - 0x1) & memory[(0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2 + 0x20 + 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20 - (0x1f & (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2)];
            }
        }
        if (~(0x20 + 0x80 + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2 > 0x20 + 0x20 + 0x80)) {
            memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20] = 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20;
            memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20] = (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2;
        }
        if (~(0x20 + 0x80 + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2 > 0x20 + 0x20 + 0x20 + 0x80)) {
            memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20] = 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20;
            memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20] = (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2;
        }
        if (~(0x20 + 0x80 + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x80)) {
            memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20] = 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20;
            memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20] = (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2;
        }
        if (~(0x20 + 0x80 + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80)) {
            memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20] = 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20;
            memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20] = (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2;
        }
        if (~(0x20 + 0x80 + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80)) {
            memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20] = 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20;
            memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20] = (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2;
        }
        if (~(0x20 + 0x80 + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80)) {
            memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20] = 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20;
            memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20] = (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2;
        }
        if (~(0x20 + 0x80 + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80)) {
            memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20] = 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20;
            memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20] = (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2;
        }
        if (~(0x20 + 0x80 + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80)) {
            memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20] = 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20;
            memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20] = (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2;
        }
        if (~(0x20 + 0x80 + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80)) {
            memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20] = 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20;
            memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20] = (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2;
        }
        if (~(0x20 + 0x80 + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80)) {
            memory[0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20] = 0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20 - 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20;
            memory[0x20 + 0x80 + 0x20 + (0x1f + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2) / 0x20 * 0x20] = (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2;
        }
        if (~(0x20 + 0x80 + (0x100 * ((0x1 & storage[0x7]) == 0) - 0x1 & storage[0x7]) / 0x2 > 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x20 + 0x80)) {
        }
    }
}

function getApproved(uint256 _arg0) public returns (unknown) {
    require(msg.data.length - 0x4 >= 0x20);
    require(mapping5[_arg0 << 0x0] != 0x0, 0x8c379a000000000000000000000000000000000000000000000000000000000, memory[0xa0], memory[0xc0], memory[0xe0], memory[0x100]);
    return mapping6[_arg0];
}

function approve(address _arg0, uint256 _arg1) public {
    require(msg.data.length - 0x4 >= 0x40);
}

function 16606e4b() public view returns (unknown) {
    return keccak256(this.code[0x3841:(0x3841+0x22)], memory[0xa0]);
}

function totalSupply() public view returns (unknown) {
    return storage[0x3];
}

